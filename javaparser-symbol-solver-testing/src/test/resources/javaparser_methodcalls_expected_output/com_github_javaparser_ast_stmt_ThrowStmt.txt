  Line 40) setExpr(expr) ==> com.github.javaparser.ast.stmt.ThrowStmt.setExpr(com.github.javaparser.ast.expr.Expression)
  Line 45) setExpr(expr) ==> com.github.javaparser.ast.stmt.ThrowStmt.setExpr(com.github.javaparser.ast.expr.Expression)
  Line 486) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 486) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 487) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 488) r.setAnnotations(annotations) ==> com.github.javaparser.ast.type.Type.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 49) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.stmt.ThrowStmt, A)
  Line 494) visit(_n.getAnnotations(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 494) _n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 495) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 495) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 497) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 498) r.setAnnotations(annotations) ==> com.github.javaparser.ast.type.Type.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 499) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 87) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.LambdaExpr, A)
  Line 53) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.stmt.ThrowStmt, A)
