  Line 49) Utils.escapeEndOfLines(string) ==> com.github.javaparser.utils.Utils.escapeEndOfLines(java.lang.String)
  Line 266) _n.getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 267) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 267) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 119) name.getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 128) ensureNotNull(parameters) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 134) ensureNotNull(throws_) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 139) ensureNotNull(typeParameters) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 151) setNameExpr(new NameExpr(name)) ==> com.github.javaparser.ast.body.ConstructorDeclaration.setNameExpr(com.github.javaparser.ast.expr.NameExpr)
  Line 268) visit(_n.getArrayBracketPairsAfterElementType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 157) setAsParentNodeOf(this.name) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 268) _n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.FieldDeclaration.getArrayBracketPairsAfterElementType()
  Line 271) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 272) _n.getModifiers() ==> com.github.javaparser.ast.body.FieldDeclaration.getModifiers()
  Line 164) setAsParentNodeOf(this.parameters) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 279) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 285) cloneNodes(_n.getId(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 285) _n.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 171) setAsParentNodeOf(this.throws_) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 286) cloneNodes(_n.getInit(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 286) _n.getInit() ==> com.github.javaparser.ast.body.VariableDeclarator.getInit()
  Line 287) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 287) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 290) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 293) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 177) setAsParentNodeOf(this.typeParameters) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 192) Modifier.getAccessSpecifier(getModifiers()) ==> com.github.javaparser.ast.Modifier.getAccessSpecifier(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 299) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 299) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 192) getModifiers() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()
  Line 193) sb.append(accessSpecifier.getCodeRepresenation()) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 54) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.expr.CharLiteralExpr, A)
  Line 193) accessSpecifier.getCodeRepresenation() ==> com.github.javaparser.ast.AccessSpecifier.getCodeRepresenation()
  Line 194) sb.append(accessSpecifier == AccessSpecifier.DEFAULT ? "" : " ") ==> java.lang.StringBuilder.append(java.lang.String)
  Line 196) sb.append(getName()) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 196) getName() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getName()
  Line 197) sb.append("(") ==> java.lang.StringBuilder.append(java.lang.String)
  Line 199) getParameters() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()
  Line 203) sb.append(", ") ==> java.lang.StringBuilder.append(java.lang.String)
  Line 50) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.type.UnionType, A)
  Line 206) sb.append(param.toStringWithoutComments()) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 300) visit(_n.getArrayBracketPairsAfterId(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 75) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, A)
  Line 59) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.CharLiteralExpr, A)
