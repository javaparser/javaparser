  Line 53) setThis(isThis) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setThis(boolean)
  Line 54) setExpr(expr) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setExpr(com.github.javaparser.ast.expr.Expression)
  Line 55) setArgs(args) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setArgs(java.util.List<com.github.javaparser.ast.expr.Expression>)
  Line 1367) n.getBody() ==> com.github.javaparser.ast.stmt.ForStmt.getBody()
  Line 62) setTypeArguments(typeArguments) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setTypeArguments(java.util.List<com.github.javaparser.ast.type.Type<?>>)
  Line 1372) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1372) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1373) printer.print("throw ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 63) setThis(isThis) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setThis(boolean)
  Line 64) setExpr(expr) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setExpr(com.github.javaparser.ast.expr.Expression)
  Line 65) setArgs(args) ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.setArgs(java.util.List<com.github.javaparser.ast.expr.Expression>)
  Line 264) _n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 1374) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1374) n.getExpr() ==> com.github.javaparser.ast.stmt.ThrowStmt.getExpr()
  Line 1375) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 265) cloneNodes(_n.getElementType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1380) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1380) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 265) _n.getElementType() ==> com.github.javaparser.ast.body.FieldDeclaration.getElementType()
  Line 1381) printer.print("synchronized (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1382) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1382) n.getExpr() ==> com.github.javaparser.ast.stmt.SynchronizedStmt.getExpr()
  Line 1383) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1384) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1384) n.getBody() ==> com.github.javaparser.ast.stmt.SynchronizedStmt.getBody()
  Line 1389) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1389) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1390) printer.print("try ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1391) n.getResources().isEmpty() ==> java.util.List.isEmpty()
  Line 1391) n.getResources() ==> com.github.javaparser.ast.stmt.TryStmt.getResources()
  Line 1392) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1393) n.getResources().iterator() ==> java.util.List.iterator()
  Line 1393) n.getResources() ==> com.github.javaparser.ast.stmt.TryStmt.getResources()
  Line 1395) resources.hasNext() ==> java.util.Iterator.hasNext()
  Line 74) setAsParentNodeOf(this.expr) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 81) setAsParentNodeOf(this.type) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 266) visit(_n.getVariables(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 70) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt, A)
