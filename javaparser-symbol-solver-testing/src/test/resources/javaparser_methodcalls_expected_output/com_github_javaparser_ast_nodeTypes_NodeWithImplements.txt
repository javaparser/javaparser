  Line 22) getImplements().add(classOrInterfaceType) ==> java.util.List.add(E)
  Line 22) getImplements() ==> com.github.javaparser.ast.nodeTypes.NodeWithImplements.getImplements()
  Line 304) provider(body) ==> com.github.javaparser.Providers.provider(java.lang.String)
  Line 316) simplifiedParse(INTERFACE_BODY, provider(body)) ==> com.github.javaparser.JavaParser.simplifiedParse(com.github.javaparser.ParseStart<T>, com.github.javaparser.Provider)
  Line 23) classOrInterfaceType.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 157) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 163) nodeWithTypeArguments.getTypeArguments() ==> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments.getTypeArguments()
  Line 164) isNullOrEmpty(typeArguments) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 165) printer.print("<") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 34) ((Node) this).tryAddImportToParentCompilationUnit(clazz) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 35) addImplements(clazz.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithImplements.addImplements(java.lang.String)
  Line 35) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
