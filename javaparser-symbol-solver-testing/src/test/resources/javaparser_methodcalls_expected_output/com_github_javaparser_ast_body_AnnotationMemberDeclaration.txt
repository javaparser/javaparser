  Line 486) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 487) printer.print("?") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 488) n.getExtends() ==> com.github.javaparser.ast.type.WildcardType.getExtends()
  Line 489) printer.print(" extends ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 47) ensureNotNull(annotations) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 52) setAsParentNodeOf(annotations) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 47) EnumSet.noneOf(Modifier.class) ==> java.util.EnumSet.noneOf(java.lang.Class<E>)
  Line 59) setModifiers(modifiers) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 60) setType(type) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 490) n.getExtends().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
