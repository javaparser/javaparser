  Line 42) value.contains("\n") ==> java.lang.String.contains(java.lang.CharSequence)
  Line 42) value.contains("\r") ==> java.lang.String.contains(java.lang.CharSequence)
  Line 52) Utils.escapeEndOfLines(string) ==> com.github.javaparser.utils.Utils.escapeEndOfLines(java.lang.String)
  Line 1169) _n.getInit() ==> com.github.javaparser.ast.stmt.ForStmt.getInit()
  Line 1170) cloneNodes(_n.getCompare(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1170) _n.getCompare() ==> com.github.javaparser.ast.stmt.ForStmt.getCompare()
  Line 61) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.expr.StringLiteralExpr, A)
  Line 1171) visit(_n.getUpdate(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 1171) _n.getUpdate() ==> com.github.javaparser.ast.stmt.ForStmt.getUpdate()
  Line 1172) cloneNodes(_n.getBody(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1172) _n.getBody() ==> com.github.javaparser.ast.stmt.ForStmt.getBody()
  Line 1173) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1173) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1176) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1179) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1185) cloneNodes(_n.getExpr(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1185) _n.getExpr() ==> com.github.javaparser.ast.stmt.ThrowStmt.getExpr()
  Line 1186) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1186) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1189) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1192) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 65) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.StringLiteralExpr, A)
