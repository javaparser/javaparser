  Line 166) Arrays.stream(modifiers).collect(toCollection(() -> EnumSet.noneOf(Modifier.class))) ==> java.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)
  Line 166) Arrays.stream(modifiers) ==> java.util.Arrays.stream(T[])
  Line 167) toCollection(() -> EnumSet.noneOf(Modifier.class)) ==> java.util.stream.Collectors.toCollection(java.util.function.Supplier<C>)
  Line 167) EnumSet.noneOf(Modifier.class) ==> java.util.EnumSet.noneOf(java.lang.Class<E>)
  Line 168) getMembers().add(methodDeclaration) ==> java.util.List.add(E)
  Line 168) getMembers() ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.getMembers()
  Line 183) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 46) result.isPresent() ==> java.util.Optional.isPresent()
  Line 79) isSuccessful() ==> com.github.javaparser.ParseResult.isSuccessful()
  Line 184) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 187) printer.print(">") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 82) new StringBuilder("Parsing failed:").append(EOL) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 192) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 169) methodDeclaration.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 17) addParameter(new Parameter(type, new VariableDeclaratorId(name))) ==> com.github.javaparser.ast.nodeTypes.NodeWithParameters.addParameter(com.github.javaparser.ast.body.Parameter)
  Line 193) isNullOrEmpty(args) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 194) args.iterator() ==> java.util.List.iterator()
  Line 194) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 195) i.next() ==> java.util.Iterator.next()
  Line 84) message.append(problem.toString()).append(EOL) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 84) message.append(problem.toString()) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 84) problem.toString() ==> com.github.javaparser.Problem.toString()
  Line 86) message.toString() ==> java.lang.StringBuilder.toString()
  Line 21) ((Node) this).tryAddImportToParentCompilationUnit(paramClass) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 98) setElementType(elementType) ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.setElementType(com.github.javaparser.ast.type.Type)
  Line 181) constructorDeclaration.setModifiers(Arrays.stream(modifiers).collect(toCollection(() -> EnumSet.noneOf(Modifier.class)))) ==> com.github.javaparser.ast.body.ConstructorDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 196) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
