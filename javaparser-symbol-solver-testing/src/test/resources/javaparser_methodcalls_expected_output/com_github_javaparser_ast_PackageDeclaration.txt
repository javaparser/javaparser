  Line 57) setName(name) ==> com.github.javaparser.ast.PackageDeclaration.setName(com.github.javaparser.ast.expr.NameExpr)
  Line 61) setAnnotations(annotations) ==> com.github.javaparser.ast.PackageDeclaration.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 62) setName(name) ==> com.github.javaparser.ast.PackageDeclaration.setName(com.github.javaparser.ast.expr.NameExpr)
  Line 67) setAnnotations(annotations) ==> com.github.javaparser.ast.PackageDeclaration.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 68) setName(name) ==> com.github.javaparser.ast.PackageDeclaration.setName(com.github.javaparser.ast.expr.NameExpr)
  Line 1062) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1063) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1070) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1070) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1071) n.getTypeDeclaration().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1071) n.getTypeDeclaration() ==> com.github.javaparser.ast.stmt.TypeDeclarationStmt.getTypeDeclaration()
  Line 1076) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1076) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1077) printer.print("assert ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1078) n.getCheck().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1078) n.getCheck() ==> com.github.javaparser.ast.stmt.AssertStmt.getCheck()
  Line 1079) n.getMessage() ==> com.github.javaparser.ast.stmt.AssertStmt.getMessage()
  Line 1080) printer.print(" : ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1081) n.getMessage().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1081) n.getMessage() ==> com.github.javaparser.ast.stmt.AssertStmt.getMessage()
  Line 1083) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1088) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 1089) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1089) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1090) printer.printLn("{") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1091) n.getStmts() ==> com.github.javaparser.ast.stmt.BlockStmt.getStmts()
  Line 1092) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1093) n.getStmts() ==> com.github.javaparser.ast.stmt.BlockStmt.getStmts()
  Line 1094) s.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1095) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1097) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1099) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 1100) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1106) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1106) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 102) ensureNotNull(extendsList) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 1107) printer.print(n.getLabel()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1107) n.getLabel() ==> com.github.javaparser.ast.stmt.LabeledStmt.getLabel()
  Line 1108) printer.print(": ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 108) ensureNotNull(implementsList) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 113) ensureNotNull(typeParameters) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 1109) n.getStmt().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1109) n.getStmt() ==> com.github.javaparser.ast.stmt.LabeledStmt.getStmt()
  Line 222) _n.getClassBody() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getClassBody()
  Line 223) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1114) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1114) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1115) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 223) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1120) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 226) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1121) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 227) _n.getName() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getName()
  Line 1121) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 130) setAsParentNodeOf(this.extendsList) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 1122) n.getExpression().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1122) n.getExpression() ==> com.github.javaparser.ast.stmt.ExpressionStmt.getExpression()
  Line 1123) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 229) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 142) setAsParentNodeOf(this.implementsList) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 1128) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1128) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1129) printer.print("switch(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1130) n.getSelector().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1130) n.getSelector() ==> com.github.javaparser.ast.stmt.SwitchStmt.getSelector()
  Line 158) setAsParentNodeOf(this.typeParameters) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 1131) printer.printLn(") {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1132) n.getEntries() ==> com.github.javaparser.ast.stmt.SwitchStmt.getEntries()
  Line 73) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.PackageDeclaration, A)
  Line 58) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.stmt.DoStmt, A)
  Line 235) visit(_n.getAnnotations(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 54) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.BooleanLiteralExpr, A)
