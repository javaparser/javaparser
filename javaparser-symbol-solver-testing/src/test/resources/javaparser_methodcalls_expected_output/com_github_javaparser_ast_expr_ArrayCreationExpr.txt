  Line 147) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 50) setLevels(levels) ==> com.github.javaparser.ast.expr.ArrayCreationExpr.setLevels(java.util.List<com.github.javaparser.ast.ArrayCreationLevel>)
  Line 35) ensureNotNull(annotations) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 51) setType(type) ==> com.github.javaparser.ast.expr.ArrayCreationExpr.setType(com.github.javaparser.ast.type.Type)
  Line 52) setInitializer(initializer) ==> com.github.javaparser.ast.expr.ArrayCreationExpr.setInitializer(com.github.javaparser.ast.expr.ArrayInitializerExpr)
  Line 57) setLevels(levels) ==> com.github.javaparser.ast.expr.ArrayCreationExpr.setLevels(java.util.List<com.github.javaparser.ast.ArrayCreationLevel>)
  Line 262) n.getQualifier() ==> com.github.javaparser.ast.expr.QualifiedNameExpr.getQualifier()
  Line 263) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 264) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 264) n.getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 266) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 52) comments.stream().filter(comment -> comment instanceof BlockComment).map(comment -> (BlockComment) comment) ==> java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)
  Line 52) comments.stream().filter(comment -> comment instanceof BlockComment) ==> java.util.stream.Stream.filter(java.util.function.Predicate<? super T>)
  Line 40) setAsParentNodeOf(annotations) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 52) comments.stream() ==> java.util.Collection.stream()
  Line 58) setType(type) ==> com.github.javaparser.ast.expr.ArrayCreationExpr.setType(com.github.javaparser.ast.type.Type)
  Line 271) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 153) visit(_n.getTypeBound(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
