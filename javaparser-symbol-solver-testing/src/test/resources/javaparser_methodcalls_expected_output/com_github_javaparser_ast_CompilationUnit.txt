  Line 79) setPackage(pakage) ==> com.github.javaparser.ast.CompilationUnit.setPackage(com.github.javaparser.ast.PackageDeclaration)
  Line 80) setImports(imports) ==> com.github.javaparser.ast.CompilationUnit.setImports(java.util.List<com.github.javaparser.ast.ImportDeclaration>)
  Line 81) setTypes(types) ==> com.github.javaparser.ast.CompilationUnit.setTypes(java.util.List<com.github.javaparser.ast.body.TypeDeclaration<?>>)
  Line 87) setPackage(pakage) ==> com.github.javaparser.ast.CompilationUnit.setPackage(com.github.javaparser.ast.PackageDeclaration)
  Line 88) setImports(imports) ==> com.github.javaparser.ast.CompilationUnit.setImports(java.util.List<com.github.javaparser.ast.ImportDeclaration>)
  Line 89) setTypes(types) ==> com.github.javaparser.ast.CompilationUnit.setTypes(java.util.List<com.github.javaparser.ast.body.TypeDeclaration<?>>)
  Line 61) setName(name) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setName(java.lang.String)
  Line 490) n.getExtends() ==> com.github.javaparser.ast.type.WildcardType.getExtends()
  Line 492) n.getSuper() ==> com.github.javaparser.ast.type.WildcardType.getSuper()
  Line 493) printer.print(" super ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 62) setDefaultValue(defaultValue) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setDefaultValue(com.github.javaparser.ast.expr.Expression)
  Line 68) setModifiers(modifiers) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 69) setType(type) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 70) setName(name) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setName(java.lang.String)
  Line 71) setDefaultValue(defaultValue) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setDefaultValue(com.github.javaparser.ast.expr.Expression)
  Line 77) setModifiers(modifiers) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 78) setType(type) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 79) setName(name) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setName(java.lang.String)
  Line 80) setDefaultValue(defaultValue) ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.setDefaultValue(com.github.javaparser.ast.expr.Expression)
  Line 494) n.getSuper().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 494) n.getSuper() ==> com.github.javaparser.ast.type.WildcardType.getSuper()
  Line 94) setAsParentNodeOf(this.initializer) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 505) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 101) setAsParentNodeOf(this.type) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 106) ensureNotNull(levels) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 507) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 507) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 508) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 508) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 509) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 509) n.getModifiers() ==> com.github.javaparser.ast.body.FieldDeclaration.getModifiers()
  Line 112) setAsParentNodeOf(levels) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 510) n.getElementType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 94) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.CompilationUnit, A)
  Line 73) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.type.ClassOrInterfaceType, A)
  Line 85) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.body.AnnotationMemberDeclaration, A)
