  Line 48) setStmt(stmt) ==> com.github.javaparser.ast.stmt.LabeledStmt.setStmt(com.github.javaparser.ast.stmt.Statement)
  Line 47) setScope(scope) ==> com.github.javaparser.ast.expr.FieldAccessExpr.setScope(com.github.javaparser.ast.expr.Expression)
  Line 48) setField(field) ==> com.github.javaparser.ast.expr.FieldAccessExpr.setField(java.lang.String)
  Line 53) setScope(scope) ==> com.github.javaparser.ast.expr.FieldAccessExpr.setScope(com.github.javaparser.ast.expr.Expression)
  Line 54) setTypeArguments(typeArguments) ==> com.github.javaparser.ast.expr.FieldAccessExpr.setTypeArguments(java.util.List<com.github.javaparser.ast.type.Type<?>>)
  Line 55) setField(field) ==> com.github.javaparser.ast.expr.FieldAccessExpr.setField(java.lang.String)
  Line 360) _n.getAnnotations() ==> com.github.javaparser.ast.body.Parameter.getAnnotations()
  Line 361) cloneNodes(_n.getElementType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 361) _n.getElementType() ==> com.github.javaparser.ast.body.Parameter.getElementType()
  Line 362) cloneNodes(_n.getId(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 362) _n.getId() ==> com.github.javaparser.ast.body.Parameter.getId()
  Line 363) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 363) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 52) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.stmt.LabeledStmt, A)
  Line 59) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.expr.FieldAccessExpr, A)
  Line 85) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.body.EnumConstantDeclaration, A)
  Line 89) ensureNotNull(args) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 94) ensureNotNull(classBody) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 364) visit(_n.getArrayBracketPairsAfterElementType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 364) _n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.Parameter.getArrayBracketPairsAfterElementType()
  Line 367) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 105) setAsParentNodeOf(this.args) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 368) _n.getModifiers() ==> com.github.javaparser.ast.body.Parameter.getModifiers()
  Line 372) _n.isVarArgs() ==> com.github.javaparser.ast.body.Parameter.isVarArgs()
  Line 375) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 381) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 381) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 111) setAsParentNodeOf(this.classBody) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 123) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 384) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 56) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.stmt.LabeledStmt, A)
  Line 124) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 130) getArgs().add(name(valueExpr)) ==> java.util.List.add(E)
  Line 130) getArgs() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getArgs()
  Line 130) name(valueExpr) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 386) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 74) setAsParentNodeOf(this.stmt) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 63) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.FieldAccessExpr, A)
