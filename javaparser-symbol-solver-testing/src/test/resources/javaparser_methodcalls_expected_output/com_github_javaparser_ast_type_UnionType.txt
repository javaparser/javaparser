  Line 1322) n.getBody() ==> com.github.javaparser.ast.stmt.DoStmt.getBody()
  Line 1323) printer.print(" while (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 20) setElements(elements) ==> com.github.javaparser.ast.type.UnionType.setElements(java.util.List<com.github.javaparser.ast.type.ReferenceType>)
  Line 1324) n.getCondition().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1324) n.getCondition() ==> com.github.javaparser.ast.stmt.DoStmt.getCondition()
  Line 1325) printer.print(");") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 25) setElements(elements) ==> com.github.javaparser.ast.type.UnionType.setElements(java.util.List<com.github.javaparser.ast.type.ReferenceType>)
  Line 35) element.setParentNode(null) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 1330) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 249) _n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 250) cloneNodes(_n.getType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 250) _n.getType() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getType()
  Line 1330) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1331) printer.print("for (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 39) setAsParentNodeOf(this.elements) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 251) cloneNodes(_n.getDefaultValue(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 251) _n.getDefaultValue() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getDefaultValue()
  Line 252) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 252) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 255) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 256) _n.getModifiers() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getModifiers()
  Line 256) _n.getName() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getName()
  Line 258) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1332) n.getVariable().accept(this, arg) ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1332) n.getVariable() ==> com.github.javaparser.ast.stmt.ForeachStmt.getVariable()
  Line 1333) printer.print(" : ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1334) n.getIterable().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1334) n.getIterable() ==> com.github.javaparser.ast.stmt.ForeachStmt.getIterable()
  Line 1335) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1336) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1336) n.getBody() ==> com.github.javaparser.ast.stmt.ForeachStmt.getBody()
  Line 1341) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1341) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1342) printer.print("for (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1343) n.getInit() ==> com.github.javaparser.ast.stmt.ForStmt.getInit()
  Line 1344) n.getInit().iterator() ==> java.util.List.iterator()
  Line 1344) n.getInit() ==> com.github.javaparser.ast.stmt.ForStmt.getInit()
  Line 1344) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1345) i.next() ==> java.util.Iterator.next()
  Line 1346) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1347) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1348) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1352) printer.print("; ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1353) n.getCompare() ==> com.github.javaparser.ast.stmt.ForStmt.getCompare()
  Line 1354) n.getCompare().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1354) n.getCompare() ==> com.github.javaparser.ast.stmt.ForStmt.getCompare()
  Line 1356) printer.print("; ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1357) n.getUpdate() ==> com.github.javaparser.ast.stmt.ForStmt.getUpdate()
  Line 1358) n.getUpdate().iterator() ==> java.util.List.iterator()
  Line 1358) n.getUpdate() ==> com.github.javaparser.ast.stmt.ForStmt.getUpdate()
  Line 1358) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1359) i.next() ==> java.util.Iterator.next()
  Line 1360) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1361) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1362) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1366) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1367) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 264) visit(_n.getAnnotations(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 60) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.CastExpr, A)
  Line 45) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.type.UnionType, A)
  Line 103) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.body.ConstructorDeclaration, A)
