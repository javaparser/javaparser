  Line 59) setName(name) ==> com.github.javaparser.ast.type.TypeParameter.setName(java.lang.String)
  Line 1053) n.getElementType() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getElementType()
  Line 60) setTypeBound(typeBound) ==> com.github.javaparser.ast.type.TypeParameter.setTypeBound(java.util.List<com.github.javaparser.ast.type.ClassOrInterfaceType>)
  Line 1054) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getArrayBracketPairsAfterElementType()
  Line 65) setName(name) ==> com.github.javaparser.ast.type.TypeParameter.setName(java.lang.String)
  Line 66) setTypeBound(typeBound) ==> com.github.javaparser.ast.type.TypeParameter.setTypeBound(java.util.List<com.github.javaparser.ast.type.ClassOrInterfaceType>)
  Line 71) setTypeBound(typeBound) ==> com.github.javaparser.ast.type.TypeParameter.setTypeBound(java.util.List<com.github.javaparser.ast.type.ClassOrInterfaceType>)
  Line 72) setAnnotations(annotations) ==> com.github.javaparser.ast.type.TypeParameter.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 373) userData.get(key) ==> java.util.IdentityHashMap.get(java.lang.Object)
  Line 221) _n.getArgs() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getArgs()
  Line 1055) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1057) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1059) n.getVariables().iterator() ==> java.util.List.iterator()
  Line 1059) n.getVariables() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getVariables()
  Line 1059) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1060) i.next() ==> java.util.Iterator.next()
  Line 394) userData.put(key, object) ==> java.util.IdentityHashMap.put(K, V)
  Line 1061) v.accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclarator.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 222) visit(_n.getClassBody(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 76) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.type.TypeParameter, A)
