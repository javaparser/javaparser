  Line 73) setScope(scope) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setScope(com.github.javaparser.ast.expr.Expression)
  Line 74) setType(type) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setType(com.github.javaparser.ast.type.Type<?>)
  Line 75) setArgs(args) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setArgs(java.util.List<com.github.javaparser.ast.expr.Expression>)
  Line 82) setScope(scope) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setScope(com.github.javaparser.ast.expr.Expression)
  Line 83) setType(type) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setType(com.github.javaparser.ast.type.Type<?>)
  Line 84) setTypeArguments(typeArguments) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setTypeArguments(java.util.List<com.github.javaparser.ast.type.Type<?>>)
  Line 85) setArgs(args) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setArgs(java.util.List<com.github.javaparser.ast.expr.Expression>)
  Line 86) setAnonymousClassBody(anonymousBody) ==> com.github.javaparser.ast.expr.ObjectCreationExpr.setAnonymousClassBody(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>)
  Line 955) _n.getArgs() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getArgs()
  Line 956) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 956) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 959) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 961) _n.isThis() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.isThis()
  Line 965) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 971) cloneNodes(_n.getTypeDeclaration(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 971) _n.getTypeDeclaration() ==> com.github.javaparser.ast.stmt.TypeDeclarationStmt.getTypeDeclaration()
  Line 972) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 972) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 975) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 978) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 984) cloneNodes(_n.getCheck(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 984) _n.getCheck() ==> com.github.javaparser.ast.stmt.AssertStmt.getCheck()
  Line 985) cloneNodes(_n.getMessage(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 985) _n.getMessage() ==> com.github.javaparser.ast.stmt.AssertStmt.getMessage()
  Line 986) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 986) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 989) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 992) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 79) ensureNotNull(arrayBracketPairsAfterId) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 85) setAsParentNodeOf(arrayBracketPairsAfterId) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 91) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.expr.ObjectCreationExpr, A)
  Line 998) visit(_n.getStmts(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 998) _n.getStmts() ==> com.github.javaparser.ast.stmt.BlockStmt.getStmts()
  Line 999) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 999) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1002) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1005) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1011) cloneNodes(_n.getStmt(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1011) _n.getStmt() ==> com.github.javaparser.ast.stmt.LabeledStmt.getStmt()
  Line 1012) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1012) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1015) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1016) _n.getLabel() ==> com.github.javaparser.ast.stmt.LabeledStmt.getLabel()
  Line 1018) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1024) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1024) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1026) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1027) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1033) cloneNodes(_n.getExpression(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1033) _n.getExpression() ==> com.github.javaparser.ast.stmt.ExpressionStmt.getExpression()
  Line 1034) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1034) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1037) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1040) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 1046) cloneNodes(_n.getSelector(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1046) _n.getSelector() ==> com.github.javaparser.ast.stmt.SwitchStmt.getSelector()
  Line 96) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.ObjectCreationExpr, A)
  Line 109) anonymousClassBody.add(body) ==> java.util.List.add(E)
  Line 110) body.setParentNode(this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 114) ensureNotNull(args) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 129) setAsParentNodeOf(this.anonymousClassBody) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 135) setAsParentNodeOf(this.args) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 141) setAsParentNodeOf(this.scope) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 150) setAsParentNodeOf(this.type) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 162) setAsParentNodeOf(this.typeArguments) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
