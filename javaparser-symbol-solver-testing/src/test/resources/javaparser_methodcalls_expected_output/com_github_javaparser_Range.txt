  Line 192) getMembers().add(initializerDeclaration) ==> java.util.List.add(E)
  Line 192) getMembers() ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.getMembers()
  Line 193) initializerDeclaration.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 200) getMembers().add(initializerDeclaration) ==> java.util.List.add(E)
  Line 200) getMembers() ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.getMembers()
  Line 9) range(Position.UNKNOWN, Position.UNKNOWN) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 30) pos(beginLine, beginColumn) ==> com.github.javaparser.Position.pos(int, int)
  Line 30) pos(endLine, endColumn) ==> com.github.javaparser.Position.pos(int, int)
  Line 34) range(begin.withColumn(column), end) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 34) begin.withColumn(column) ==> com.github.javaparser.Position.withColumn(int)
  Line 201) initializerDeclaration.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 38) range(begin.withLine(line), end) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 38) begin.withLine(line) ==> com.github.javaparser.Position.withLine(int)
  Line 212) getMembers().stream().filter(m -> m instanceof MethodDeclaration && ((MethodDeclaration) m).getName().equals(name)).map(m -> (MethodDeclaration) m).collect(toList()) ==> java.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)
  Line 212) getMembers().stream().filter(m -> m instanceof MethodDeclaration && ((MethodDeclaration) m).getName().equals(name)).map(m -> (MethodDeclaration) m) ==> java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)
  Line 212) getMembers().stream().filter(m -> m instanceof MethodDeclaration && ((MethodDeclaration) m).getName().equals(name)) ==> java.util.stream.Stream.filter(java.util.function.Predicate<? super T>)
  Line 212) getMembers().stream() ==> java.util.Collection.stream()
  Line 212) getMembers() ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.getMembers()
  Line 42) range(begin, end.withColumn(column)) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 42) end.withColumn(column) ==> com.github.javaparser.Position.withColumn(int)
  Line 48) addAndGetParameter(new ClassOrInterfaceType(paramClass.getSimpleName()), name) ==> com.github.javaparser.ast.nodeTypes.NodeWithParameters.addAndGetParameter(com.github.javaparser.ast.type.Type, java.lang.String)
  Line 48) paramClass.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 46) range(begin, end.withLine(line)) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 46) end.withLine(line) ==> com.github.javaparser.Position.withLine(int)
  Line 50) range(begin, this.end) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 54) range(this.begin, end) ==> com.github.javaparser.Range.range(com.github.javaparser.Position, com.github.javaparser.Position)
  Line 59) addAndGetParameter(new ClassOrInterfaceType(className), name) ==> com.github.javaparser.ast.nodeTypes.NodeWithParameters.addAndGetParameter(com.github.javaparser.ast.type.Type, java.lang.String)
  Line 63) getParameters().add(parameter) ==> java.util.List.add(E)
  Line 63) getParameters() ==> com.github.javaparser.ast.nodeTypes.NodeWithParameters.getParameters()
  Line 58) begin.isBefore(other.begin) ==> com.github.javaparser.Position.isBefore(com.github.javaparser.Position)
  Line 58) end.isAfter(other.end) ==> com.github.javaparser.Position.isAfter(com.github.javaparser.Position)
  Line 62) end.isBefore(position) ==> com.github.javaparser.Position.isBefore(com.github.javaparser.Position)
  Line 66) begin.isAfter(position) ==> com.github.javaparser.Position.isAfter(com.github.javaparser.Position)
  Line 72) getClass() ==> java.lang.Object.getClass()
  Line 72) o.getClass() ==> java.lang.Object.getClass()
  Line 76) begin.equals(range.begin) ==> com.github.javaparser.Position.equals(java.lang.Object)
  Line 116) _n.getTypes() ==> com.github.javaparser.ast.CompilationUnit.getTypes()
  Line 64) parameter.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 119) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 76) end.equals(range.end) ==> com.github.javaparser.Position.equals(java.lang.Object)
  Line 82) begin.hashCode() ==> com.github.javaparser.Position.hashCode()
  Line 82) end.hashCode() ==> com.github.javaparser.Position.hashCode()
