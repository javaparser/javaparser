  Line 43) setType(type) ==> com.github.javaparser.ast.expr.TypeExpr.setType(com.github.javaparser.ast.type.Type<?>)
  Line 48) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.expr.TypeExpr, A)
  Line 1243) _n.getParameters() ==> com.github.javaparser.ast.expr.LambdaExpr.getParameters()
  Line 1245) cloneNodes(_n.getBody(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1245) _n.getBody() ==> com.github.javaparser.ast.expr.LambdaExpr.getBody()
  Line 1247) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1248) _n.isParametersEnclosed() ==> com.github.javaparser.ast.expr.LambdaExpr.isParametersEnclosed()
  Line 1254) cloneNodes(_n.getScope(), arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1254) _n.getScope() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getScope()
  Line 1256) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 1257) _n.getTypeArguments() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getTypeArguments()
  Line 1257) _n.getIdentifier() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getIdentifier()
  Line 1263) cloneNodes(n.getType(), arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 1263) n.getType() ==> com.github.javaparser.ast.expr.TypeExpr.getType()
  Line 1265) n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 53) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.TypeExpr, A)
  Line 64) setAsParentNodeOf(this.type) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
