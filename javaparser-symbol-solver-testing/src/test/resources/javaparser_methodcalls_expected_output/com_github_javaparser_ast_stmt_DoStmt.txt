  Line 1017) n.getElementType() ==> com.github.javaparser.ast.body.Parameter.getElementType()
  Line 43) setBody(body) ==> com.github.javaparser.ast.stmt.DoStmt.setBody(com.github.javaparser.ast.stmt.Statement)
  Line 280) child.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 44) setCondition(condition) ==> com.github.javaparser.ast.stmt.DoStmt.setCondition(com.github.javaparser.ast.expr.Expression)
  Line 49) setBody(body) ==> com.github.javaparser.ast.stmt.DoStmt.setBody(com.github.javaparser.ast.stmt.Statement)
  Line 50) setCondition(condition) ==> com.github.javaparser.ast.stmt.DoStmt.setCondition(com.github.javaparser.ast.expr.Expression)
  Line 282) comments.addAll(child.getAllContainedComments()) ==> java.util.List.addAll(java.util.Collection<? extends E>)
  Line 282) child.getAllContainedComments() ==> com.github.javaparser.ast.Node.getAllContainedComments()
  Line 1019) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.Parameter.getArrayBracketPairsAfterElementType()
  Line 297) this.parentNode.childrenNodes.remove(this) ==> java.util.List.remove(java.lang.Object)
  Line 302) this.parentNode.childrenNodes.add(this) ==> java.util.List.add(E)
  Line 1020) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1022) n.isVarArgs() ==> com.github.javaparser.ast.body.Parameter.isVarArgs()
  Line 1023) printer.print("...") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1025) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 309) current.setParentNode(this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 316) childNode.setParentNode(this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 324) range.isAfter(position) ==> com.github.javaparser.Range.isAfter(com.github.javaparser.Position)
  Line 328) range.isBefore(position) ==> com.github.javaparser.Range.isBefore(com.github.javaparser.Position)
  Line 1026) n.getId().accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclaratorId.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1026) n.getId() ==> com.github.javaparser.ast.body.Parameter.getId()
  Line 336) getParentNodeOfType(CompilationUnit.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 338) parentNode.addImport(clazz) ==> com.github.javaparser.ast.CompilationUnit.addImport(java.lang.Class<?>)
  Line 349) getChildrenNodes() ==> com.github.javaparser.ast.Node.getChildrenNodes()
  Line 350) clazz.isInstance(child) ==> java.lang.Class.isInstance(java.lang.Object)
  Line 1031) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1031) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1032) n.isThis() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.isThis()
  Line 1033) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 1034) printer.print("this") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1036) n.getExpr() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getExpr()
  Line 351) nodes.add(clazz.cast(child)) ==> java.util.List.add(E)
  Line 351) clazz.cast(child) ==> java.lang.Class.cast(java.lang.Object)
  Line 1037) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1037) n.getExpr() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getExpr()
  Line 1038) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1040) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 1041) printer.print("super") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 101) setAsParentNodeOf(this.left) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 112) setAsParentNodeOf(this.right) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 1043) printArguments(n.getArgs(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printArguments(java.util.List<com.github.javaparser.ast.expr.Expression>, java.lang.Object)
  Line 353) nodes.addAll(child.getNodesByType(clazz)) ==> java.util.List.addAll(java.util.Collection<? extends E>)
  Line 221) visit(_n.getArgs(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 54) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.stmt.DoStmt, A)
