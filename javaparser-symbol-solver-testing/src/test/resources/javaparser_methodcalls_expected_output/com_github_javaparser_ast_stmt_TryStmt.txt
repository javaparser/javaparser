  Line 505) _n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 178) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 51) setTryBlock(tryBlock) ==> com.github.javaparser.ast.stmt.TryStmt.setTryBlock(com.github.javaparser.ast.stmt.BlockStmt)
  Line 506) cloneNodes(_n.getExtends(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 179) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 506) _n.getExtends() ==> com.github.javaparser.ast.type.WildcardType.getExtends()
  Line 52) setCatchs(catchs) ==> com.github.javaparser.ast.stmt.TryStmt.setCatchs(java.util.List<com.github.javaparser.ast.stmt.CatchClause>)
  Line 53) setFinallyBlock(finallyBlock) ==> com.github.javaparser.ast.stmt.TryStmt.setFinallyBlock(com.github.javaparser.ast.stmt.BlockStmt)
  Line 507) cloneNodes(_n.getSuper(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 507) _n.getSuper() ==> com.github.javaparser.ast.type.WildcardType.getSuper()
  Line 59) setResources(resources) ==> com.github.javaparser.ast.stmt.TryStmt.setResources(java.util.List<com.github.javaparser.ast.expr.VariableDeclarationExpr>)
  Line 60) setTryBlock(tryBlock) ==> com.github.javaparser.ast.stmt.TryStmt.setTryBlock(com.github.javaparser.ast.stmt.BlockStmt)
  Line 193) getVariables().size() ==> java.util.List.size()
  Line 61) setCatchs(catchs) ==> com.github.javaparser.ast.stmt.TryStmt.setCatchs(java.util.List<com.github.javaparser.ast.stmt.CatchClause>)
  Line 193) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 508) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 62) setFinallyBlock(finallyBlock) ==> com.github.javaparser.ast.stmt.TryStmt.setFinallyBlock(com.github.javaparser.ast.stmt.BlockStmt)
  Line 195) getParentNodeOfType(ClassOrInterfaceDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 508) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 511) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 196) getParentNodeOfType(EnumDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 197) parentClass.isInterface() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
  Line 201) getVariables().get(0) ==> java.util.List.get(int)
  Line 201) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 514) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 202) variable.getId().getName() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getName()
  Line 202) variable.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 515) r.setAnnotations(annotations) ==> com.github.javaparser.ast.type.Type.setAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>)
  Line 203) fieldName.toUpperCase().substring(0, 1) ==> java.lang.String.substring(int, int)
  Line 203) fieldName.toUpperCase() ==> java.lang.String.toUpperCase()
  Line 203) fieldName.substring(1, fieldName.length()) ==> java.lang.String.substring(int, int)
  Line 203) fieldName.length() ==> java.lang.String.length()
  Line 521) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 521) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 524) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 530) cloneNodes(_n.getName(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 530) _n.getName() ==> com.github.javaparser.ast.expr.ArrayAccessExpr.getName()
  Line 206) parentClass.addMethod("get" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 531) cloneNodes(_n.getIndex(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 531) _n.getIndex() ==> com.github.javaparser.ast.expr.ArrayAccessExpr.getIndex()
  Line 208) parentEnum.addMethod("get" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 532) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 532) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 535) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 209) getter.setType(variable.getType()) ==> com.github.javaparser.ast.body.MethodDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 538) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 544) cloneNodes(_n.getType(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 544) _n.getType() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getType()
  Line 209) variable.getType() ==> com.github.javaparser.ast.body.VariableDeclarator.getType()
  Line 211) getter.setBody(blockStmt) ==> com.github.javaparser.ast.body.MethodDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)
  Line 212) blockStmt.addStatement(new ReturnStmt(name(fieldName))) ==> com.github.javaparser.ast.nodeTypes.NodeWithStatements.addStatement(com.github.javaparser.ast.stmt.Statement)
  Line 212) name(fieldName) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 225) getVariables().size() ==> java.util.List.size()
  Line 225) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 227) getParentNodeOfType(ClassOrInterfaceDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 228) getParentNodeOfType(EnumDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 229) parentClass.isInterface() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
  Line 233) getVariables().get(0) ==> java.util.List.get(int)
  Line 233) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 234) variable.getId().getName() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getName()
  Line 234) variable.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 235) fieldName.toUpperCase().substring(0, 1) ==> java.lang.String.substring(int, int)
  Line 235) fieldName.toUpperCase() ==> java.lang.String.toUpperCase()
  Line 235) fieldName.substring(1, fieldName.length()) ==> java.lang.String.substring(int, int)
  Line 235) fieldName.length() ==> java.lang.String.length()
  Line 239) parentClass.addMethod("set" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 241) parentEnum.addMethod("set" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 242) setter.setType(VOID_TYPE) ==> com.github.javaparser.ast.body.MethodDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 243) setter.getParameters().add(new Parameter(variable.getType(), new VariableDeclaratorId(fieldName))) ==> java.util.List.add(E)
  Line 243) setter.getParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getParameters()
  Line 243) variable.getType() ==> com.github.javaparser.ast.body.VariableDeclarator.getType()
  Line 67) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.stmt.TryStmt, A)
  Line 245) setter.setBody(blockStmt2) ==> com.github.javaparser.ast.body.MethodDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)
  Line 545) visit(_n.getLevels(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 545) _n.getLevels() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getLevels()
  Line 546) cloneNodes(_n.getInitializer(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 546) _n.getInitializer() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getInitializer()
  Line 246) blockStmt2.addStatement(new AssignExpr(new NameExpr("this." + fieldName), new NameExpr(fieldName), Operator.assign)) ==> com.github.javaparser.ast.nodeTypes.NodeWithStatements.addStatement(com.github.javaparser.ast.expr.Expression)
  Line 548) _n.getRange() ==> com.github.javaparser.ast.Node.getRange()
  Line 550) cloneNodes(_n.getComment(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.cloneNodes(T, java.lang.Object)
  Line 550) _n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 259) setAsParentNodeOf(this.elementType) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 267) ensureNotNull(arrayBracketPairsAfterElementType) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 551) r.setComment(comment) ==> com.github.javaparser.ast.Node.setComment(com.github.javaparser.ast.comments.Comment)
  Line 274) setAsParentNodeOf(arrayBracketPairsAfterType) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 557) visit(_n.getValues(), _arg) ==> com.github.javaparser.ast.visitor.CloneVisitor.visit(java.util.List<T>, java.lang.Object)
  Line 72) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.stmt.TryStmt, A)
  Line 53) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.expr.LongLiteralExpr, A)
