  Line 61) ctClazz.isEnum() ==> javassist.CtClass.isEnum()
  Line 43) constructor.getDeclaringClass() ==> java.lang.reflect.Constructor.getDeclaringClass()
  Line 63) ctClazz.isAnnotation() ==> javassist.CtClass.isAnnotation()
  Line 48) constructor.getParameterCount() ==> java.lang.reflect.Constructor.getParameterCount()
  Line 53) getNumberOfParams() ==> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration.getNumberOfParams()
  Line 443) node.getClass() ==> java.lang.Object.getClass()
  Line 125) Collectors.toList() ==> java.util.stream.Collectors.toList()
  Line 448) node.getClass().getCanonicalName() ==> java.lang.Class.getCanonicalName()
  Line 448) node.getClass() ==> java.lang.Object.getClass()
  Line 65) ctClazz.isArray() ==> javassist.CtClass.isArray()
  Line 73) Modifier.isPublic(modifiers) ==> java.lang.reflect.Modifier.isPublic(int)
  Line 75) Modifier.isProtected(modifiers) ==> java.lang.reflect.Modifier.isProtected(int)
  Line 77) Modifier.isPrivate(modifiers) ==> java.lang.reflect.Modifier.isPrivate(int)
  Line 54) String.format("No param with index %d. Number of params: %d", i, getNumberOfParams()) ==> java.lang.String.format(java.lang.String, java.lang.Object...)
  Line 453) node.getClass().getCanonicalName() ==> java.lang.Class.getCanonicalName()
  Line 128) ImmutableList.<FieldDeclaration>builder().addAll(myFields).addAll(superClassFields).addAll(interfaceFields).build() ==> com.google.common.collect.ImmutableList.Builder.build()
