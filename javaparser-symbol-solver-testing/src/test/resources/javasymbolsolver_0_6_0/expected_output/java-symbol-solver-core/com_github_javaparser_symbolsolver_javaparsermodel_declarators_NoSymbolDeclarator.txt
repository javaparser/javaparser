  Line 78) baseType.describe() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
  Line 87) other.isArray() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
  Line 48) ancestor.getAllAncestors() ==> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllAncestors()
  Line 88) baseType.isPrimitive() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
  Line 49) ancestors.contains(inheritedAncestor) ==> java.util.List.contains(java.lang.Object)
  Line 88) other.asArrayType().getComponentType().isPrimitive() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
  Line 88) other.asArrayType().getComponentType() ==> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
  Line 88) other.asArrayType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
  Line 89) baseType.equals(other.asArrayType().getComponentType()) ==> java.lang.Object.equals(java.lang.Object)
  Line 89) other.asArrayType().getComponentType() ==> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
  Line 89) other.asArrayType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
  Line 91) baseType.isAssignableBy(other.asArrayType().getComponentType()) ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 91) other.asArrayType().getComponentType() ==> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
  Line 91) other.asArrayType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
  Line 92) other.isNull() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isNull()
  Line 50) ancestors.add(inheritedAncestor) ==> java.util.List.add(E)
  Line 37) Collections.emptyList() ==> java.util.Collections.emptyList()
