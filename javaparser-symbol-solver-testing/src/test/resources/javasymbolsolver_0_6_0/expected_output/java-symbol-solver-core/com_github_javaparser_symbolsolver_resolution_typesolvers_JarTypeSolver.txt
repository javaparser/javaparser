  Line 105) getType() ==> com.github.javaparser.symbolsolver.model.typesystem.LazyType.getType()
  Line 110) getType().replaceTypeVariables(tp, replaced) ==> com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 110) getType() ==> com.github.javaparser.symbolsolver.model.typesystem.LazyType.getType()
  Line 115) getType().isAssignableBy(other) ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 115) getType() ==> com.github.javaparser.symbolsolver.model.typesystem.LazyType.getType()
  Line 65) constructor.hasVariadicParameter() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter()
  Line 68) nameToValue.equals(that.nameToValue) ==> java.util.Map.equals(java.lang.Object)
  Line 54) sb.append(getName()) ==> java.lang.StringBuffer.append(java.lang.String)
