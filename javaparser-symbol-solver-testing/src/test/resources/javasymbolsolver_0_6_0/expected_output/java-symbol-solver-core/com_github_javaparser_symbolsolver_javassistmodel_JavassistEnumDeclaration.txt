  Line 244) type.asReferenceType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
  Line 53) this.equivalentTypes.add(type) ==> java.util.Set.add(E)
  Line 81) wildcard.isExtends() ==> com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends()
  Line 80) wrappedNode.getName().getId() ==> com.github.javaparser.ast.nodeTypes.NodeWithIdentifier.getId()
  Line 80) wrappedNode.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 90) this.getClass().getCanonicalName() ==> java.lang.Class.getCanonicalName()
  Line 90) this.getClass() ==> java.lang.Object.getClass()
  Line 82) inferenceVariableType.superTypes.add(wildcard.getBoundedType()) ==> java.util.Set.add(E)
  Line 245) result.transformTypeParameters(typeParam -> replaceTypeParam(typeParam, tp, typeSolver)).asReferenceType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
