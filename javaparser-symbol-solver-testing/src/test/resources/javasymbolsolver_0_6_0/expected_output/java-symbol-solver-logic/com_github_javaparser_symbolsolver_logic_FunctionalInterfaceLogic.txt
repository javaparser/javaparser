  Line 13) o2.getName() ==> java.lang.reflect.Parameter.getName()
  Line 42) parameterizedType.getActualTypeArguments() ==> java.lang.reflect.ParameterizedType.getActualTypeArguments()
  Line 15) new ClassComparator().compare(o1.getType(), o2.getType()) ==> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.compare(java.lang.Class<?>, java.lang.Class<?>)
  Line 15) o1.getType() ==> java.lang.reflect.Parameter.getType()
  Line 15) o2.getType() ==> java.lang.reflect.Parameter.getType()
  Line 42) ((JavassistMethodDeclaration) methodDeclaration).resolveTypeVariables(context, parameterTypes) ==> com.github.javaparser.symbolsolver.javassistmodel.JavassistMethodDeclaration.resolveTypeVariables(com.github.javaparser.symbolsolver.core.resolution.Context, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>)
  Line 43) ReflectionFactory.typeUsageFor(t, typeSolver) ==> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
