  Line 71) containerName.isEmpty() ==> java.lang.String.isEmpty()
  Line 278) node.getClass() ==> java.lang.Object.getClass()
  Line 235) Object.class.getCanonicalName() ==> java.lang.Class.getCanonicalName()
  Line 239) type.isPrimitive() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
  Line 72) wrappedNode.getName().getId() ==> com.github.javaparser.ast.nodeTypes.NodeWithIdentifier.getId()
  Line 72) wrappedNode.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 241) type.isArray() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
  Line 112) Arrays.stream(methodSignature.getTypeParameters()).map((jasTp) -> new JavassistTypeParameter(jasTp, this, typeSolver)) ==> java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)
  Line 242) replaceTypeParam(type.asArrayType().getComponentType(), tp, typeSolver) ==> com.github.javaparser.symbolsolver.resolution.MethodResolutionLogic.replaceTypeParam(com.github.javaparser.symbolsolver.model.typesystem.Type, com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
  Line 242) type.asArrayType().getComponentType() ==> com.github.javaparser.symbolsolver.model.typesystem.ArrayType.getComponentType()
  Line 112) Arrays.stream(methodSignature.getTypeParameters()) ==> java.util.Arrays.stream(T[])
  Line 242) type.asArrayType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.asArrayType()
  Line 112) methodSignature.getTypeParameters() ==> javassist.bytecode.SignatureAttribute.MethodSignature.getTypeParameters()
  Line 112) Collectors.toList() ==> java.util.stream.Collectors.toList()
  Line 120) JavassistFactory.modifiersToAccessLevel(ctConstructor.getModifiers()) ==> com.github.javaparser.symbolsolver.javassistmodel.JavassistFactory.modifiersToAccessLevel(int)
  Line 120) ctConstructor.getModifiers() ==> javassist.CtBehavior.getModifiers()
  Line 243) type.isReferenceType() ==> com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
  Line 74) wrappedNode.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 283) node.getClass().getCanonicalName() ==> java.lang.Class.getCanonicalName()
  Line 236) typeParametersMap().replaceAll(a) ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.replaceAll(com.github.javaparser.symbolsolver.model.typesystem.Type)
