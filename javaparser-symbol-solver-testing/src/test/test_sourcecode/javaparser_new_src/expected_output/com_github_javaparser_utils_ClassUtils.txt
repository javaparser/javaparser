  Line 12) primitiveWrapperMap.put(Boolean.TYPE, Boolean.class) ==> java.util.Map.put(K, V)
  Line 13) primitiveWrapperMap.put(Byte.TYPE, Byte.class) ==> java.util.Map.put(K, V)
  Line 14) primitiveWrapperMap.put(Character.TYPE, Character.class) ==> java.util.Map.put(K, V)
  Line 15) primitiveWrapperMap.put(Short.TYPE, Short.class) ==> java.util.Map.put(K, V)
  Line 16) primitiveWrapperMap.put(Integer.TYPE, Integer.class) ==> java.util.Map.put(K, V)
  Line 17) primitiveWrapperMap.put(Long.TYPE, Long.class) ==> java.util.Map.put(K, V)
  Line 18) primitiveWrapperMap.put(Double.TYPE, Double.class) ==> java.util.Map.put(K, V)
  Line 19) primitiveWrapperMap.put(Float.TYPE, Float.class) ==> java.util.Map.put(K, V)
  Line 20) primitiveWrapperMap.put(Void.TYPE, Void.TYPE) ==> java.util.Map.put(K, V)
  Line 28) primitiveWrapperMap.keySet() ==> java.util.Map.keySet()
  Line 29) primitiveWrapperMap.get(primitiveClass) ==> java.util.Map.get(java.lang.Object)
  Line 30) primitiveClass.equals(wrapperClass) ==> java.lang.Object.equals(java.lang.Object)
  Line 31) wrapperPrimitiveMap.put(wrapperClass, primitiveClass) ==> java.util.Map.put(K, V)
  Line 51) type.isPrimitive() ==> java.lang.Class.isPrimitive()
  Line 51) isPrimitiveWrapper(type) ==> com.github.javaparser.utils.ClassUtils.isPrimitiveWrapper(java.lang.Class<?>)
  Line 67) wrapperPrimitiveMap.containsKey(type) ==> java.util.Map.containsKey(java.lang.Object)
