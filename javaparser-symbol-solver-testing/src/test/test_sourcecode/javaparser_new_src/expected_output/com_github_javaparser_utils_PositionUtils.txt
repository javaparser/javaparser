  Line 46) sortByBeginPosition(nodes, false) ==> com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.List<T>, boolean)
  Line 50) Collections.sort(nodes, (o1, o2) -> PositionUtils.compare(o1, o2, ignoringAnnotations)) ==> java.util.Collections.sort(java.util.List<T>, java.util.Comparator<? super T>)
  Line 50) PositionUtils.compare(o1, o2, ignoringAnnotations) ==> com.github.javaparser.utils.PositionUtils.compare(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean)
  Line 54) areInOrder(a, b, false) ==> com.github.javaparser.utils.PositionUtils.areInOrder(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean)
  Line 58) compare(a, b, ignoringAnnotations) ==> com.github.javaparser.utils.PositionUtils.compare(com.github.javaparser.ast.Node, com.github.javaparser.ast.Node, boolean)
  Line 63) signum(beginLineWithoutConsideringAnnotation(a) - beginLineWithoutConsideringAnnotation(b)) ==> java.lang.Integer.signum(int)
  Line 63) beginLineWithoutConsideringAnnotation(a) ==> com.github.javaparser.utils.PositionUtils.beginLineWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 63) beginLineWithoutConsideringAnnotation(b) ==> com.github.javaparser.utils.PositionUtils.beginLineWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 65) signum(beginColumnWithoutConsideringAnnotation(a) - beginColumnWithoutConsideringAnnotation(b)) ==> java.lang.Integer.signum(int)
  Line 65) beginColumnWithoutConsideringAnnotation(a) ==> com.github.javaparser.utils.PositionUtils.beginColumnWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 65) beginColumnWithoutConsideringAnnotation(b) ==> com.github.javaparser.utils.PositionUtils.beginColumnWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 71) signum(a.getBegin().line - b.getBegin().line) ==> java.lang.Integer.signum(int)
  Line 71) a.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 71) b.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 73) signum(a.getBegin().column - b.getBegin().column) ==> java.lang.Integer.signum(int)
  Line 73) a.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 73) b.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 82) annotations.addAll(((NodeWithAnnotations<?>) node).getAnnotations()) ==> java.util.List.addAll(java.util.Collection<? extends E>)
  Line 82) ((NodeWithAnnotations<?>) node).getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 83) annotations.isEmpty() ==> java.util.List.isEmpty()
  Line 86) sortByBeginPosition(annotations) ==> com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.List<T>)
  Line 87) annotations.get(annotations.size() - 1) ==> java.util.List.get(int)
  Line 87) annotations.size() ==> java.util.List.size()
  Line 94) beginNodeWithoutConsideringAnnotations(node).getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 94) beginNodeWithoutConsideringAnnotations(node) ==> com.github.javaparser.utils.PositionUtils.beginNodeWithoutConsideringAnnotations(com.github.javaparser.ast.Node)
  Line 99) beginNodeWithoutConsideringAnnotations(node).getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 99) beginNodeWithoutConsideringAnnotations(node) ==> com.github.javaparser.utils.PositionUtils.beginNodeWithoutConsideringAnnotations(com.github.javaparser.ast.Node)
  Line 105) casted.getElementType() ==> com.github.javaparser.ast.nodeTypes.NodeWithElementType.getElementType()
  Line 108) casted.getNameExpr() ==> com.github.javaparser.ast.body.TypeDeclaration.getNameExpr()
  Line 115) PositionUtils.getLastAnnotation(container) ==> com.github.javaparser.utils.PositionUtils.getLastAnnotation(com.github.javaparser.ast.Node)
  Line 116) container.contains(contained) ==> com.github.javaparser.ast.Node.contains(com.github.javaparser.ast.Node)
  Line 118) container.contains(contained) ==> com.github.javaparser.ast.Node.contains(com.github.javaparser.ast.Node)
  Line 124) beginLineWithoutConsideringAnnotation(container) ==> com.github.javaparser.utils.PositionUtils.beginLineWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 125) beginColumnWithoutConsideringAnnotation(container) ==> com.github.javaparser.utils.PositionUtils.beginColumnWithoutConsideringAnnotation(com.github.javaparser.ast.Node)
  Line 126) contained.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 127) contained.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 127) contained.getBegin() ==> com.github.javaparser.ast.Node.getBegin()
  Line 128) container.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
  Line 128) contained.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
  Line 130) container.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
  Line 130) contained.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
  Line 130) container.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
  Line 130) contained.getEnd() ==> com.github.javaparser.ast.Node.getEnd()
