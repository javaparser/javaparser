  Line 86) buf.append(indentation) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 92) makeIndent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.makeIndent()
  Line 95) buf.append(arg) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 99) print(arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 100) printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 104) buf.append(EOL) ==> java.lang.StringBuilder.append(java.lang.String)
  Line 109) buf.toString() ==> java.lang.StringBuilder.toString()
  Line 114) getSource() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.getSource()
  Line 118) createSourcePrinter() ==> com.github.javaparser.ast.visitor.DumpVisitor.createSourcePrinter()
  Line 125) printer.getSource() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.getSource()
  Line 129) modifiers.size() ==> java.util.AbstractCollection.size()
  Line 130) printer.print(modifiers.stream().map(Modifier::getLib).collect(Collectors.joining(" ")) + " ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 130) modifiers.stream().map(Modifier::getLib).collect(Collectors.joining(" ")) ==> java.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)
  Line 130) modifiers.stream().map(Modifier::getLib) ==> java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)
  Line 130) modifiers.stream() ==> java.util.Collection.stream()
  Line 130) Collectors.joining(" ") ==> java.util.stream.Collectors.joining(java.lang.CharSequence)
  Line 135) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 136) member.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 137) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 142) isNullOrEmpty(annotations) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 144) a.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 145) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 151) isNullOrEmpty(annotations) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 153) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 156) annotation.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 157) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 163) nodeWithTypeArguments.getTypeArguments() ==> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments.getTypeArguments()
  Line 164) isNullOrEmpty(typeArguments) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 165) printer.print("<") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 166) typeArguments.iterator() ==> java.util.List.iterator()
  Line 166) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 167) i.next() ==> java.util.Iterator.next()
  Line 168) t.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 169) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 170) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 173) printer.print(">") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 178) isNullOrEmpty(args) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 179) printer.print("<") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 180) args.iterator() ==> java.util.List.iterator()
  Line 180) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 181) i.next() ==> java.util.Iterator.next()
  Line 182) t.accept(this, arg) ==> com.github.javaparser.ast.type.TypeParameter.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 183) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 184) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 187) printer.print(">") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 192) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 193) isNullOrEmpty(args) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 194) args.iterator() ==> java.util.List.iterator()
  Line 194) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 195) i.next() ==> java.util.Iterator.next()
  Line 196) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 197) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 198) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 202) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 207) javacomment.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 213) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 213) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 215) n.getPackage() ==> com.github.javaparser.ast.CompilationUnit.getPackage()
  Line 216) n.getPackage().accept(this, arg) ==> com.github.javaparser.ast.PackageDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 216) n.getPackage() ==> com.github.javaparser.ast.CompilationUnit.getPackage()
  Line 219) isNullOrEmpty(n.getImports()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 219) n.getImports() ==> com.github.javaparser.ast.CompilationUnit.getImports()
  Line 220) n.getImports() ==> com.github.javaparser.ast.CompilationUnit.getImports()
  Line 221) i.accept(this, arg) ==> com.github.javaparser.ast.ImportDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 223) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 226) isNullOrEmpty(n.getTypes()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 226) n.getTypes() ==> com.github.javaparser.ast.CompilationUnit.getTypes()
  Line 227) n.getTypes().iterator() ==> java.util.List.iterator()
  Line 227) n.getTypes() ==> com.github.javaparser.ast.CompilationUnit.getTypes()
  Line 227) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 228) i.next().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 228) i.next() ==> java.util.Iterator.next()
  Line 229) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 230) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 231) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 236) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 241) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 241) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 242) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 242) n.getAnnotations() ==> com.github.javaparser.ast.PackageDeclaration.getAnnotations()
  Line 243) printer.print("package ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 244) n.getName().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 244) n.getName() ==> com.github.javaparser.ast.PackageDeclaration.getName()
  Line 245) printer.printLn(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 246) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 248) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 253) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 253) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 254) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 254) n.getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 256) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 261) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 261) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 262) n.getQualifier().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 262) n.getQualifier() ==> com.github.javaparser.ast.expr.QualifiedNameExpr.getQualifier()
  Line 263) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 264) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 264) n.getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 266) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 271) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 271) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 272) n.isEmptyImportDeclaration() ==> com.github.javaparser.ast.ImportDeclaration.isEmptyImportDeclaration()
  Line 273) printer.print("import ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 274) n.isStatic() ==> com.github.javaparser.ast.ImportDeclaration.isStatic()
  Line 275) printer.print("static ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 277) n.getName().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 277) n.getName() ==> com.github.javaparser.ast.ImportDeclaration.getName()
  Line 278) n.isAsterisk() ==> com.github.javaparser.ast.ImportDeclaration.isAsterisk()
  Line 279) printer.print(".*") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 282) printer.printLn(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 284) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 289) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 289) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 290) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 290) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 291) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 291) n.getModifiers() ==> com.github.javaparser.ast.body.TypeDeclaration.getModifiers()
  Line 293) n.isInterface() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
  Line 294) printer.print("interface ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 296) printer.print("class ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 299) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 299) n.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 301) printTypeParameters(n.getTypeParameters(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.Object)
  Line 301) n.getTypeParameters() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters()
  Line 303) isNullOrEmpty(n.getExtends()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 303) n.getExtends() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtends()
  Line 304) printer.print(" extends ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 305) n.getExtends().iterator() ==> java.util.List.iterator()
  Line 305) n.getExtends() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getExtends()
  Line 305) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 306) i.next() ==> java.util.Iterator.next()
  Line 307) c.accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 308) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 309) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 314) isNullOrEmpty(n.getImplements()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 314) n.getImplements() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplements()
  Line 315) printer.print(" implements ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 316) n.getImplements().iterator() ==> java.util.List.iterator()
  Line 316) n.getImplements() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getImplements()
  Line 316) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 317) i.next() ==> java.util.Iterator.next()
  Line 318) c.accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 319) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 320) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 325) printer.printLn(" {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 326) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 327) isNullOrEmpty(n.getMembers()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 327) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 328) printMembers(n.getMembers(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMembers(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>, java.lang.Object)
  Line 328) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 331) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 333) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 334) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 339) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 339) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 340) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 342) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 347) printer.print("/**") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 348) printer.print(n.getContent()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 348) n.getContent() ==> com.github.javaparser.ast.comments.Comment.getContent()
  Line 349) printer.printLn("*/") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 354) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 354) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 356) n.getScope() ==> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
  Line 357) n.getScope().accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 357) n.getScope() ==> com.github.javaparser.ast.type.ClassOrInterfaceType.getScope()
  Line 358) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 360) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 361) ae.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 362) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 365) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 365) n.getName() ==> com.github.javaparser.ast.type.ClassOrInterfaceType.getName()
  Line 367) n.isUsingDiamondOperator() ==> com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments.isUsingDiamondOperator()
  Line 368) printer.print("<>") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 370) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 376) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 376) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 377) n.getAnnotations() ==> com.github.javaparser.ast.type.TypeParameter.getAnnotations()
  Line 378) ann.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 379) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 381) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 381) n.getName() ==> com.github.javaparser.ast.type.TypeParameter.getName()
  Line 382) isNullOrEmpty(n.getTypeBound()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 382) n.getTypeBound() ==> com.github.javaparser.ast.type.TypeParameter.getTypeBound()
  Line 383) printer.print(" extends ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 384) n.getTypeBound().iterator() ==> java.util.List.iterator()
  Line 384) n.getTypeBound() ==> com.github.javaparser.ast.type.TypeParameter.getTypeBound()
  Line 384) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 385) i.next() ==> java.util.Iterator.next()
  Line 386) c.accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 387) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 388) printer.print(" & ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 396) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 396) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 397) printAnnotations(n.getAnnotations(), true, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 397) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 398) n.getType() ==> com.github.javaparser.ast.type.PrimitiveType.getType()
  Line 400) printer.print("boolean") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 403) printer.print("byte") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 406) printer.print("char") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 409) printer.print("double") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 412) printer.print("float") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 415) printer.print("int") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 418) printer.print("long") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 421) printer.print("short") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 432) arrayTypeBuffer.add(arrayType) ==> java.util.List.add(E)
  Line 433) arrayType.getComponentType() ==> com.github.javaparser.ast.type.ArrayType.getComponentType()
  Line 436) type.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 438) printAnnotations(arrayType.getAnnotations(), true, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 438) arrayType.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 439) printer.print("[]") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 445) printAnnotations(n.getAnnotations(), true, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 445) n.getAnnotations() ==> com.github.javaparser.ast.ArrayCreationLevel.getAnnotations()
  Line 446) printer.print("[") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 447) n.getDimension() ==> com.github.javaparser.ast.ArrayCreationLevel.getDimension()
  Line 448) n.getDimension().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 448) n.getDimension() ==> com.github.javaparser.ast.ArrayCreationLevel.getDimension()
  Line 450) printer.print("]") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 455) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 455) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 456) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 456) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 458) n.getElements() ==> com.github.javaparser.ast.type.IntersectionType.getElements()
  Line 459) element.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 463) printer.print(" & ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 469) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 469) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 470) printAnnotations(n.getAnnotations(), true, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 470) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 472) n.getElements() ==> com.github.javaparser.ast.type.UnionType.getElements()
  Line 476) printer.print(" | ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 478) element.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 485) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 485) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 486) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 486) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 487) printer.print("?") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 488) n.getExtends() ==> com.github.javaparser.ast.type.WildcardType.getExtends()
  Line 489) printer.print(" extends ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 490) n.getExtends().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 490) n.getExtends() ==> com.github.javaparser.ast.type.WildcardType.getExtends()
  Line 492) n.getSuper() ==> com.github.javaparser.ast.type.WildcardType.getSuper()
  Line 493) printer.print(" super ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 494) n.getSuper().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 494) n.getSuper() ==> com.github.javaparser.ast.type.WildcardType.getSuper()
  Line 505) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 507) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 507) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 508) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 508) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 509) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 509) n.getModifiers() ==> com.github.javaparser.ast.body.FieldDeclaration.getModifiers()
  Line 510) n.getElementType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 510) n.getElementType() ==> com.github.javaparser.ast.body.FieldDeclaration.getElementType()
  Line 511) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.FieldDeclaration.getArrayBracketPairsAfterElementType()
  Line 512) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 515) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 516) n.getVariables().iterator() ==> java.util.List.iterator()
  Line 516) n.getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 516) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 517) i.next() ==> java.util.Iterator.next()
  Line 518) var.accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclarator.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 519) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 520) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 524) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 529) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 529) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 530) n.getId().accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclaratorId.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 530) n.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 531) n.getInit() ==> com.github.javaparser.ast.body.VariableDeclarator.getInit()
  Line 532) printer.print(" = ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 533) n.getInit().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 533) n.getInit() ==> com.github.javaparser.ast.body.VariableDeclarator.getInit()
  Line 539) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 539) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 540) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 540) n.getName() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getName()
  Line 541) n.getArrayBracketPairsAfterId() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getArrayBracketPairsAfterId()
  Line 542) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 548) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 548) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 549) printer.print("{") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 550) isNullOrEmpty(n.getValues()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 550) n.getValues() ==> com.github.javaparser.ast.expr.ArrayInitializerExpr.getValues()
  Line 551) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 552) n.getValues().iterator() ==> java.util.List.iterator()
  Line 552) n.getValues() ==> com.github.javaparser.ast.expr.ArrayInitializerExpr.getValues()
  Line 552) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 553) i.next() ==> java.util.Iterator.next()
  Line 554) expr.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 555) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 556) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 559) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 561) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 566) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 566) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 567) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 567) n.getAnnotations() ==> com.github.javaparser.ast.type.Type.getAnnotations()
  Line 568) printer.print("void") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 573) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 573) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 574) n.getName().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 574) n.getName() ==> com.github.javaparser.ast.expr.ArrayAccessExpr.getName()
  Line 575) printer.print("[") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 576) n.getIndex().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 576) n.getIndex() ==> com.github.javaparser.ast.expr.ArrayAccessExpr.getIndex()
  Line 577) printer.print("]") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 582) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 582) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 583) printer.print("new ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 584) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 584) n.getType() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getType()
  Line 585) n.getLevels() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getLevels()
  Line 586) level.accept(this, arg) ==> com.github.javaparser.ast.ArrayCreationLevel.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 588) n.getInitializer() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getInitializer()
  Line 589) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 590) n.getInitializer().accept(this, arg) ==> com.github.javaparser.ast.expr.ArrayInitializerExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 590) n.getInitializer() ==> com.github.javaparser.ast.expr.ArrayCreationExpr.getInitializer()
  Line 596) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 596) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 597) n.getTarget().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 597) n.getTarget() ==> com.github.javaparser.ast.expr.AssignExpr.getTarget()
  Line 598) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 599) n.getOperator() ==> com.github.javaparser.ast.expr.AssignExpr.getOperator()
  Line 601) printer.print("=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 604) printer.print("&=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 607) printer.print("|=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 610) printer.print("^=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 613) printer.print("+=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 616) printer.print("-=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 619) printer.print("%=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 622) printer.print("/=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 625) printer.print("*=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 628) printer.print("<<=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 631) printer.print(">>=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 634) printer.print(">>>=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 637) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 638) n.getValue().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 638) n.getValue() ==> com.github.javaparser.ast.expr.AssignExpr.getValue()
  Line 643) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 643) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 644) n.getLeft().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 644) n.getLeft() ==> com.github.javaparser.ast.expr.BinaryExpr.getLeft()
  Line 645) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 646) n.getOperator() ==> com.github.javaparser.ast.expr.BinaryExpr.getOperator()
  Line 648) printer.print("||") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 651) printer.print("&&") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 654) printer.print("|") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 657) printer.print("&") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 660) printer.print("^") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 663) printer.print("==") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 666) printer.print("!=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 669) printer.print("<") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 672) printer.print(">") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 675) printer.print("<=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 678) printer.print(">=") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 681) printer.print("<<") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 684) printer.print(">>") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 687) printer.print(">>>") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 690) printer.print("+") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 693) printer.print("-") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 696) printer.print("*") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 699) printer.print("/") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 702) printer.print("%") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 705) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 706) n.getRight().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 706) n.getRight() ==> com.github.javaparser.ast.expr.BinaryExpr.getRight()
  Line 711) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 711) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 712) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 713) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 713) n.getType() ==> com.github.javaparser.ast.expr.CastExpr.getType()
  Line 714) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 715) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 715) n.getExpr() ==> com.github.javaparser.ast.expr.CastExpr.getExpr()
  Line 720) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 720) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 721) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 721) n.getType() ==> com.github.javaparser.ast.expr.ClassExpr.getType()
  Line 722) printer.print(".class") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 727) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 727) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 728) n.getCondition().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 728) n.getCondition() ==> com.github.javaparser.ast.expr.ConditionalExpr.getCondition()
  Line 729) printer.print(" ? ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 730) n.getThenExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 730) n.getThenExpr() ==> com.github.javaparser.ast.expr.ConditionalExpr.getThenExpr()
  Line 731) printer.print(" : ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 732) n.getElseExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 732) n.getElseExpr() ==> com.github.javaparser.ast.expr.ConditionalExpr.getElseExpr()
  Line 737) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 737) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 738) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 739) n.getInner() ==> com.github.javaparser.ast.expr.EnclosedExpr.getInner()
  Line 740) n.getInner().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 740) n.getInner() ==> com.github.javaparser.ast.expr.EnclosedExpr.getInner()
  Line 742) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 747) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 747) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 748) n.getScope().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 748) n.getScope() ==> com.github.javaparser.ast.expr.FieldAccessExpr.getScope()
  Line 749) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 750) printer.print(n.getField()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 750) n.getField() ==> com.github.javaparser.ast.expr.FieldAccessExpr.getField()
  Line 755) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 755) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 756) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 756) n.getExpr() ==> com.github.javaparser.ast.expr.InstanceOfExpr.getExpr()
  Line 757) printer.print(" instanceof ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 758) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 758) n.getType() ==> com.github.javaparser.ast.expr.InstanceOfExpr.getType()
  Line 763) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 763) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 764) printer.print("'") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 765) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 765) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 766) printer.print("'") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 771) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 771) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 772) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 772) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 777) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 777) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 778) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 778) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 783) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 783) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 784) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 784) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 789) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 789) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 790) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 790) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 795) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 795) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 796) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 796) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 801) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 801) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 802) printer.print("\"") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 803) printer.print(n.getValue()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 803) n.getValue() ==> com.github.javaparser.ast.expr.StringLiteralExpr.getValue()
  Line 804) printer.print("\"") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 809) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 809) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 810) printer.print(String.valueOf(n.getValue())) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 810) String.valueOf(n.getValue()) ==> java.lang.String.valueOf(boolean)
  Line 810) n.getValue() ==> com.github.javaparser.ast.expr.BooleanLiteralExpr.getValue()
  Line 815) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 815) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 816) printer.print("null") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 821) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 821) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 822) n.getClassExpr() ==> com.github.javaparser.ast.expr.ThisExpr.getClassExpr()
  Line 823) n.getClassExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 823) n.getClassExpr() ==> com.github.javaparser.ast.expr.ThisExpr.getClassExpr()
  Line 824) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 826) printer.print("this") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 831) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 831) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 832) n.getClassExpr() ==> com.github.javaparser.ast.expr.SuperExpr.getClassExpr()
  Line 833) n.getClassExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 833) n.getClassExpr() ==> com.github.javaparser.ast.expr.SuperExpr.getClassExpr()
  Line 834) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 836) printer.print("super") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 841) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 841) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 842) n.getScope() ==> com.github.javaparser.ast.expr.MethodCallExpr.getScope()
  Line 843) n.getScope().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 843) n.getScope() ==> com.github.javaparser.ast.expr.MethodCallExpr.getScope()
  Line 844) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 846) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 847) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 847) n.getName() ==> com.github.javaparser.ast.expr.MethodCallExpr.getName()
  Line 848) printArguments(n.getArgs(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printArguments(java.util.List<com.github.javaparser.ast.expr.Expression>, java.lang.Object)
  Line 848) n.getArgs() ==> com.github.javaparser.ast.expr.MethodCallExpr.getArgs()
  Line 853) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 853) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 854) n.getScope() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getScope()
  Line 855) n.getScope().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 855) n.getScope() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getScope()
  Line 856) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 859) printer.print("new ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 861) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 862) isNullOrEmpty(n.getTypeArguments()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 862) n.getTypeArguments() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getTypeArguments()
  Line 863) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 866) n.getType().accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 866) n.getType() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getType()
  Line 868) printArguments(n.getArgs(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printArguments(java.util.List<com.github.javaparser.ast.expr.Expression>, java.lang.Object)
  Line 868) n.getArgs() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getArgs()
  Line 870) n.getAnonymousClassBody() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody()
  Line 871) printer.printLn(" {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 872) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 873) printMembers(n.getAnonymousClassBody(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMembers(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>, java.lang.Object)
  Line 873) n.getAnonymousClassBody() ==> com.github.javaparser.ast.expr.ObjectCreationExpr.getAnonymousClassBody()
  Line 874) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 875) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 881) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 881) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 882) n.getOperator() ==> com.github.javaparser.ast.expr.UnaryExpr.getOperator()
  Line 884) printer.print("+") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 887) printer.print("-") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 890) printer.print("~") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 893) printer.print("!") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 896) printer.print("++") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 899) printer.print("--") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 904) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 904) n.getExpr() ==> com.github.javaparser.ast.expr.UnaryExpr.getExpr()
  Line 906) n.getOperator() ==> com.github.javaparser.ast.expr.UnaryExpr.getOperator()
  Line 908) printer.print("++") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 911) printer.print("--") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 919) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 919) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 920) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 920) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 921) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 921) n.getModifiers() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getModifiers()
  Line 923) printTypeParameters(n.getTypeParameters(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.Object)
  Line 923) n.getTypeParameters() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()
  Line 924) n.getTypeParameters().isEmpty() ==> java.util.List.isEmpty()
  Line 924) n.getTypeParameters() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getTypeParameters()
  Line 925) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 927) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 927) n.getName() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getName()
  Line 929) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 930) n.getParameters().isEmpty() ==> java.util.List.isEmpty()
  Line 930) n.getParameters() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()
  Line 931) n.getParameters().iterator() ==> java.util.List.iterator()
  Line 931) n.getParameters() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getParameters()
  Line 931) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 932) i.next() ==> java.util.Iterator.next()
  Line 933) p.accept(this, arg) ==> com.github.javaparser.ast.body.Parameter.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 934) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 935) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 939) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 941) isNullOrEmpty(n.getThrows()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 941) n.getThrows() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()
  Line 942) printer.print(" throws ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 943) n.getThrows().iterator() ==> java.util.List.iterator()
  Line 943) n.getThrows() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getThrows()
  Line 943) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 944) i.next() ==> java.util.Iterator.next()
  Line 945) name.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 946) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 947) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 951) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 952) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 952) n.getBody() ==> com.github.javaparser.ast.body.ConstructorDeclaration.getBody()
  Line 957) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 959) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 959) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 960) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 960) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 961) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 961) n.getModifiers() ==> com.github.javaparser.ast.body.MethodDeclaration.getModifiers()
  Line 962) n.isDefault() ==> com.github.javaparser.ast.body.MethodDeclaration.isDefault()
  Line 963) printer.print("default ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 965) printTypeParameters(n.getTypeParameters(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeParameters(java.util.List<com.github.javaparser.ast.type.TypeParameter>, java.lang.Object)
  Line 965) n.getTypeParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getTypeParameters()
  Line 966) isNullOrEmpty(n.getTypeParameters()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 966) n.getTypeParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getTypeParameters()
  Line 967) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 970) n.getElementType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 970) n.getElementType() ==> com.github.javaparser.ast.body.MethodDeclaration.getElementType()
  Line 971) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.MethodDeclaration.getArrayBracketPairsAfterElementType()
  Line 972) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 974) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 975) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 975) n.getName() ==> com.github.javaparser.ast.body.MethodDeclaration.getName()
  Line 977) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 978) isNullOrEmpty(n.getParameters()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 978) n.getParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getParameters()
  Line 979) n.getParameters().iterator() ==> java.util.List.iterator()
  Line 979) n.getParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getParameters()
  Line 979) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 980) i.next() ==> java.util.Iterator.next()
  Line 981) p.accept(this, arg) ==> com.github.javaparser.ast.body.Parameter.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 982) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 983) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 987) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 989) n.getArrayBracketPairsAfterParameterList() ==> com.github.javaparser.ast.body.MethodDeclaration.getArrayBracketPairsAfterParameterList()
  Line 990) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 993) isNullOrEmpty(n.getThrows()) ==> com.github.javaparser.utils.Utils.isNullOrEmpty(java.util.Collection<E>)
  Line 993) n.getThrows() ==> com.github.javaparser.ast.body.MethodDeclaration.getThrows()
  Line 994) printer.print(" throws ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 995) n.getThrows().iterator() ==> java.util.List.iterator()
  Line 995) n.getThrows() ==> com.github.javaparser.ast.body.MethodDeclaration.getThrows()
  Line 995) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 996) i.next() ==> java.util.Iterator.next()
  Line 997) name.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 998) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 999) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1003) n.getBody() ==> com.github.javaparser.ast.body.MethodDeclaration.getBody()
  Line 1004) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1006) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1007) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1007) n.getBody() ==> com.github.javaparser.ast.body.MethodDeclaration.getBody()
  Line 1013) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1013) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1014) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 1014) n.getAnnotations() ==> com.github.javaparser.ast.body.Parameter.getAnnotations()
  Line 1015) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 1015) n.getModifiers() ==> com.github.javaparser.ast.body.Parameter.getModifiers()
  Line 1016) n.getElementType() ==> com.github.javaparser.ast.body.Parameter.getElementType()
  Line 1017) n.getElementType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1017) n.getElementType() ==> com.github.javaparser.ast.body.Parameter.getElementType()
  Line 1019) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.body.Parameter.getArrayBracketPairsAfterElementType()
  Line 1020) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1022) n.isVarArgs() ==> com.github.javaparser.ast.body.Parameter.isVarArgs()
  Line 1023) printer.print("...") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1025) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1026) n.getId().accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclaratorId.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1026) n.getId() ==> com.github.javaparser.ast.body.Parameter.getId()
  Line 1031) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1031) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1032) n.isThis() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.isThis()
  Line 1033) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 1034) printer.print("this") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1036) n.getExpr() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getExpr()
  Line 1037) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1037) n.getExpr() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getExpr()
  Line 1038) printer.print(".") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1040) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 1041) printer.print("super") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1043) printArguments(n.getArgs(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printArguments(java.util.List<com.github.javaparser.ast.expr.Expression>, java.lang.Object)
  Line 1043) n.getArgs() ==> com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt.getArgs()
  Line 1044) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1049) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1049) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1050) printAnnotations(n.getAnnotations(), false, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 1050) n.getAnnotations() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getAnnotations()
  Line 1051) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 1051) n.getModifiers() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getModifiers()
  Line 1053) n.getElementType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1053) n.getElementType() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getElementType()
  Line 1054) n.getArrayBracketPairsAfterElementType() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getArrayBracketPairsAfterElementType()
  Line 1055) pair.accept(this, arg) ==> com.github.javaparser.ast.ArrayBracketPair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1057) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1059) n.getVariables().iterator() ==> java.util.List.iterator()
  Line 1059) n.getVariables() ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.getVariables()
  Line 1059) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1060) i.next() ==> java.util.Iterator.next()
  Line 1061) v.accept(this, arg) ==> com.github.javaparser.ast.body.VariableDeclarator.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1062) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1063) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1070) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1070) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1071) n.getTypeDeclaration().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1071) n.getTypeDeclaration() ==> com.github.javaparser.ast.stmt.TypeDeclarationStmt.getTypeDeclaration()
  Line 1076) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1076) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1077) printer.print("assert ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1078) n.getCheck().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1078) n.getCheck() ==> com.github.javaparser.ast.stmt.AssertStmt.getCheck()
  Line 1079) n.getMessage() ==> com.github.javaparser.ast.stmt.AssertStmt.getMessage()
  Line 1080) printer.print(" : ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1081) n.getMessage().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1081) n.getMessage() ==> com.github.javaparser.ast.stmt.AssertStmt.getMessage()
  Line 1083) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1088) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 1089) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1089) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1090) printer.printLn("{") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1091) n.getStmts() ==> com.github.javaparser.ast.stmt.BlockStmt.getStmts()
  Line 1092) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1093) n.getStmts() ==> com.github.javaparser.ast.stmt.BlockStmt.getStmts()
  Line 1094) s.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1095) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1097) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1099) printOrphanCommentsEnding(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsEnding(com.github.javaparser.ast.Node)
  Line 1100) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1106) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1106) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1107) printer.print(n.getLabel()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1107) n.getLabel() ==> com.github.javaparser.ast.stmt.LabeledStmt.getLabel()
  Line 1108) printer.print(": ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1109) n.getStmt().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1109) n.getStmt() ==> com.github.javaparser.ast.stmt.LabeledStmt.getStmt()
  Line 1114) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1114) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1115) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1120) printOrphanCommentsBeforeThisChildNode(n) ==> com.github.javaparser.ast.visitor.DumpVisitor.printOrphanCommentsBeforeThisChildNode(com.github.javaparser.ast.Node)
  Line 1121) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1121) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1122) n.getExpression().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1122) n.getExpression() ==> com.github.javaparser.ast.stmt.ExpressionStmt.getExpression()
  Line 1123) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1128) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1128) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1129) printer.print("switch(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1130) n.getSelector().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1130) n.getSelector() ==> com.github.javaparser.ast.stmt.SwitchStmt.getSelector()
  Line 1131) printer.printLn(") {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1132) n.getEntries() ==> com.github.javaparser.ast.stmt.SwitchStmt.getEntries()
  Line 1133) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1134) n.getEntries() ==> com.github.javaparser.ast.stmt.SwitchStmt.getEntries()
  Line 1135) e.accept(this, arg) ==> com.github.javaparser.ast.stmt.SwitchEntryStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1137) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1139) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1145) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1145) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1146) n.getLabel() ==> com.github.javaparser.ast.stmt.SwitchEntryStmt.getLabel()
  Line 1147) printer.print("case ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1148) n.getLabel().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1148) n.getLabel() ==> com.github.javaparser.ast.stmt.SwitchEntryStmt.getLabel()
  Line 1149) printer.print(":") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1151) printer.print("default:") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1153) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1154) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1155) n.getStmts() ==> com.github.javaparser.ast.stmt.SwitchEntryStmt.getStmts()
  Line 1156) n.getStmts() ==> com.github.javaparser.ast.stmt.SwitchEntryStmt.getStmts()
  Line 1157) s.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1158) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1161) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1166) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1166) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1167) printer.print("break") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1168) n.getId() ==> com.github.javaparser.ast.stmt.BreakStmt.getId()
  Line 1169) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1170) printer.print(n.getId()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1170) n.getId() ==> com.github.javaparser.ast.stmt.BreakStmt.getId()
  Line 1172) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1177) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1177) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1178) printer.print("return") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1179) n.getExpr() ==> com.github.javaparser.ast.stmt.ReturnStmt.getExpr()
  Line 1180) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1181) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1181) n.getExpr() ==> com.github.javaparser.ast.stmt.ReturnStmt.getExpr()
  Line 1183) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1188) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1188) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1189) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 1189) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 1190) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 1190) n.getModifiers() ==> com.github.javaparser.ast.body.TypeDeclaration.getModifiers()
  Line 1192) printer.print("enum ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1193) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1193) n.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 1195) n.getImplements().isEmpty() ==> java.util.List.isEmpty()
  Line 1195) n.getImplements() ==> com.github.javaparser.ast.body.EnumDeclaration.getImplements()
  Line 1196) printer.print(" implements ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1197) n.getImplements().iterator() ==> java.util.List.iterator()
  Line 1197) n.getImplements() ==> com.github.javaparser.ast.body.EnumDeclaration.getImplements()
  Line 1197) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1198) i.next() ==> java.util.Iterator.next()
  Line 1199) c.accept(this, arg) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1200) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1201) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1206) printer.printLn(" {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1207) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1208) n.getEntries() ==> com.github.javaparser.ast.body.EnumDeclaration.getEntries()
  Line 1209) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1210) n.getEntries().iterator() ==> java.util.List.iterator()
  Line 1210) n.getEntries() ==> com.github.javaparser.ast.body.EnumDeclaration.getEntries()
  Line 1210) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1211) i.next() ==> java.util.Iterator.next()
  Line 1212) e.accept(this, arg) ==> com.github.javaparser.ast.body.EnumConstantDeclaration.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1213) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1214) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1218) n.getMembers().isEmpty() ==> java.util.List.isEmpty()
  Line 1218) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 1219) printer.printLn(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1220) printMembers(n.getMembers(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMembers(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>, java.lang.Object)
  Line 1220) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 1222) n.getEntries().isEmpty() ==> java.util.List.isEmpty()
  Line 1222) n.getEntries() ==> com.github.javaparser.ast.body.EnumDeclaration.getEntries()
  Line 1223) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1226) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1227) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1232) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1232) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1233) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 1233) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 1234) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1234) n.getName() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getName()
  Line 1236) n.getArgs().isEmpty() ==> java.util.List.isEmpty()
  Line 1236) n.getArgs() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getArgs()
  Line 1237) printArguments(n.getArgs(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printArguments(java.util.List<com.github.javaparser.ast.expr.Expression>, java.lang.Object)
  Line 1237) n.getArgs() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getArgs()
  Line 1240) n.getClassBody().isEmpty() ==> java.util.List.isEmpty()
  Line 1240) n.getClassBody() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getClassBody()
  Line 1241) printer.printLn(" {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1242) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1243) printMembers(n.getClassBody(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMembers(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>, java.lang.Object)
  Line 1243) n.getClassBody() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getClassBody()
  Line 1244) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1245) printer.printLn("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1251) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1251) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1252) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1257) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1257) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1258) n.isStatic() ==> com.github.javaparser.ast.body.InitializerDeclaration.isStatic()
  Line 1259) printer.print("static ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1261) n.getBlock().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1261) n.getBlock() ==> com.github.javaparser.ast.body.InitializerDeclaration.getBlock()
  Line 1266) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1266) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1267) printer.print("if (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1268) n.getCondition().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1268) n.getCondition() ==> com.github.javaparser.ast.stmt.IfStmt.getCondition()
  Line 1269) n.getThenStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getThenStmt()
  Line 1271) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1273) printer.printLn(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1274) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1276) n.getThenStmt().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1276) n.getThenStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getThenStmt()
  Line 1278) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1279) n.getElseStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getElseStmt()
  Line 1281) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1283) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1284) n.getElseStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getElseStmt()
  Line 1285) n.getElseStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getElseStmt()
  Line 1287) printer.print("else ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1289) printer.printLn("else") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1290) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1292) n.getElseStmt().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1292) n.getElseStmt() ==> com.github.javaparser.ast.stmt.IfStmt.getElseStmt()
  Line 1294) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1300) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1300) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1301) printer.print("while (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1302) n.getCondition().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1302) n.getCondition() ==> com.github.javaparser.ast.stmt.WhileStmt.getCondition()
  Line 1303) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1304) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1304) n.getBody() ==> com.github.javaparser.ast.stmt.WhileStmt.getBody()
  Line 1309) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1309) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1310) printer.print("continue") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1311) n.getId() ==> com.github.javaparser.ast.stmt.ContinueStmt.getId()
  Line 1312) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1313) printer.print(n.getId()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1313) n.getId() ==> com.github.javaparser.ast.stmt.ContinueStmt.getId()
  Line 1315) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1320) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1320) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1321) printer.print("do ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1322) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1322) n.getBody() ==> com.github.javaparser.ast.stmt.DoStmt.getBody()
  Line 1323) printer.print(" while (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1324) n.getCondition().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1324) n.getCondition() ==> com.github.javaparser.ast.stmt.DoStmt.getCondition()
  Line 1325) printer.print(");") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1330) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1330) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1331) printer.print("for (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1332) n.getVariable().accept(this, arg) ==> com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1332) n.getVariable() ==> com.github.javaparser.ast.stmt.ForeachStmt.getVariable()
  Line 1333) printer.print(" : ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1334) n.getIterable().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1334) n.getIterable() ==> com.github.javaparser.ast.stmt.ForeachStmt.getIterable()
  Line 1335) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1336) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1336) n.getBody() ==> com.github.javaparser.ast.stmt.ForeachStmt.getBody()
  Line 1341) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1341) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1342) printer.print("for (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1343) n.getInit() ==> com.github.javaparser.ast.stmt.ForStmt.getInit()
  Line 1344) n.getInit().iterator() ==> java.util.List.iterator()
  Line 1344) n.getInit() ==> com.github.javaparser.ast.stmt.ForStmt.getInit()
  Line 1344) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1345) i.next() ==> java.util.Iterator.next()
  Line 1346) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1347) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1348) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1352) printer.print("; ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1353) n.getCompare() ==> com.github.javaparser.ast.stmt.ForStmt.getCompare()
  Line 1354) n.getCompare().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1354) n.getCompare() ==> com.github.javaparser.ast.stmt.ForStmt.getCompare()
  Line 1356) printer.print("; ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1357) n.getUpdate() ==> com.github.javaparser.ast.stmt.ForStmt.getUpdate()
  Line 1358) n.getUpdate().iterator() ==> java.util.List.iterator()
  Line 1358) n.getUpdate() ==> com.github.javaparser.ast.stmt.ForStmt.getUpdate()
  Line 1358) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1359) i.next() ==> java.util.Iterator.next()
  Line 1360) e.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1361) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1362) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1366) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1367) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1367) n.getBody() ==> com.github.javaparser.ast.stmt.ForStmt.getBody()
  Line 1372) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1372) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1373) printer.print("throw ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1374) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1374) n.getExpr() ==> com.github.javaparser.ast.stmt.ThrowStmt.getExpr()
  Line 1375) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1380) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1380) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1381) printer.print("synchronized (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1382) n.getExpr().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1382) n.getExpr() ==> com.github.javaparser.ast.stmt.SynchronizedStmt.getExpr()
  Line 1383) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1384) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1384) n.getBody() ==> com.github.javaparser.ast.stmt.SynchronizedStmt.getBody()
  Line 1389) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1389) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1390) printer.print("try ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1391) n.getResources().isEmpty() ==> java.util.List.isEmpty()
  Line 1391) n.getResources() ==> com.github.javaparser.ast.stmt.TryStmt.getResources()
  Line 1392) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1393) n.getResources().iterator() ==> java.util.List.iterator()
  Line 1393) n.getResources() ==> com.github.javaparser.ast.stmt.TryStmt.getResources()
  Line 1395) resources.hasNext() ==> java.util.Iterator.hasNext()
  Line 1396) visit(resources.next(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.visit(com.github.javaparser.ast.expr.VariableDeclarationExpr, java.lang.Object)
  Line 1396) resources.next() ==> java.util.Iterator.next()
  Line 1397) resources.hasNext() ==> java.util.Iterator.hasNext()
  Line 1398) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1399) printer.printLn() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn()
  Line 1401) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1406) n.getResources().size() ==> java.util.List.size()
  Line 1406) n.getResources() ==> com.github.javaparser.ast.stmt.TryStmt.getResources()
  Line 1407) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1409) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1411) n.getTryBlock().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1411) n.getTryBlock() ==> com.github.javaparser.ast.stmt.TryStmt.getTryBlock()
  Line 1412) n.getCatchs() ==> com.github.javaparser.ast.stmt.TryStmt.getCatchs()
  Line 1413) n.getCatchs() ==> com.github.javaparser.ast.stmt.TryStmt.getCatchs()
  Line 1414) c.accept(this, arg) ==> com.github.javaparser.ast.stmt.CatchClause.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1417) n.getFinallyBlock() ==> com.github.javaparser.ast.stmt.TryStmt.getFinallyBlock()
  Line 1418) printer.print(" finally ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1419) n.getFinallyBlock().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1419) n.getFinallyBlock() ==> com.github.javaparser.ast.stmt.TryStmt.getFinallyBlock()
  Line 1425) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1425) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1426) printer.print(" catch (") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1427) n.getParam().accept(this, arg) ==> com.github.javaparser.ast.body.Parameter.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1427) n.getParam() ==> com.github.javaparser.ast.stmt.CatchClause.getParam()
  Line 1428) printer.print(") ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1429) n.getBody().accept(this, arg) ==> com.github.javaparser.ast.stmt.BlockStmt.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1429) n.getBody() ==> com.github.javaparser.ast.stmt.CatchClause.getBody()
  Line 1435) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1435) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1436) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 1436) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 1437) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 1437) n.getModifiers() ==> com.github.javaparser.ast.body.TypeDeclaration.getModifiers()
  Line 1439) printer.print("@interface ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1440) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1440) n.getName() ==> com.github.javaparser.ast.body.TypeDeclaration.getName()
  Line 1441) printer.printLn(" {") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1442) printer.indent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.indent()
  Line 1443) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 1444) printMembers(n.getMembers(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMembers(java.util.List<com.github.javaparser.ast.body.BodyDeclaration<?>>, java.lang.Object)
  Line 1444) n.getMembers() ==> com.github.javaparser.ast.body.TypeDeclaration.getMembers()
  Line 1446) printer.unindent() ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.unindent()
  Line 1447) printer.print("}") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1452) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1452) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1453) printMemberAnnotations(n.getAnnotations(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printMemberAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, java.lang.Object)
  Line 1453) n.getAnnotations() ==> com.github.javaparser.ast.body.BodyDeclaration.getAnnotations()
  Line 1454) printModifiers(n.getModifiers()) ==> com.github.javaparser.ast.visitor.DumpVisitor.printModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 1454) n.getModifiers() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getModifiers()
  Line 1456) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1456) n.getType() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getType()
  Line 1457) printer.print(" ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1458) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1458) n.getName() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getName()
  Line 1459) printer.print("()") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1460) n.getDefaultValue() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getDefaultValue()
  Line 1461) printer.print(" default ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1462) n.getDefaultValue().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1462) n.getDefaultValue() ==> com.github.javaparser.ast.body.AnnotationMemberDeclaration.getDefaultValue()
  Line 1464) printer.print(";") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1469) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1469) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1470) printer.print("@") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1471) n.getName().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1471) n.getName() ==> com.github.javaparser.ast.expr.AnnotationExpr.getName()
  Line 1476) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1476) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1477) printer.print("@") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1478) n.getName().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1478) n.getName() ==> com.github.javaparser.ast.expr.AnnotationExpr.getName()
  Line 1479) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1480) n.getMemberValue().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1480) n.getMemberValue() ==> com.github.javaparser.ast.expr.SingleMemberAnnotationExpr.getMemberValue()
  Line 1481) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1486) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1486) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1487) printer.print("@") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1488) n.getName().accept(this, arg) ==> com.github.javaparser.ast.expr.NameExpr.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1488) n.getName() ==> com.github.javaparser.ast.expr.AnnotationExpr.getName()
  Line 1489) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1490) n.getPairs() ==> com.github.javaparser.ast.expr.NormalAnnotationExpr.getPairs()
  Line 1491) n.getPairs().iterator() ==> java.util.List.iterator()
  Line 1491) n.getPairs() ==> com.github.javaparser.ast.expr.NormalAnnotationExpr.getPairs()
  Line 1491) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1492) i.next() ==> java.util.Iterator.next()
  Line 1493) m.accept(this, arg) ==> com.github.javaparser.ast.expr.MemberValuePair.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1494) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1495) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1499) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1504) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1504) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1505) printer.print(n.getName()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1505) n.getName() ==> com.github.javaparser.ast.expr.MemberValuePair.getName()
  Line 1506) printer.print(" = ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1507) n.getValue().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1507) n.getValue() ==> com.github.javaparser.ast.expr.MemberValuePair.getValue()
  Line 1515) printer.print("//") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1516) n.getContent() ==> com.github.javaparser.ast.comments.Comment.getContent()
  Line 1517) tmp.replace('\r', ' ') ==> java.lang.String.replace(char, char)
  Line 1518) tmp.replace('\n', ' ') ==> java.lang.String.replace(char, char)
  Line 1519) printer.printLn(tmp) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1527) printer.print("/*") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1528) printer.print(n.getContent()) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1528) n.getContent() ==> com.github.javaparser.ast.comments.Comment.getContent()
  Line 1529) printer.printLn("*/") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.printLn(java.lang.String)
  Line 1534) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1534) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1536) n.getParameters() ==> com.github.javaparser.ast.expr.LambdaExpr.getParameters()
  Line 1537) n.isParametersEnclosed() ==> com.github.javaparser.ast.expr.LambdaExpr.isParametersEnclosed()
  Line 1540) printer.print("(") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1543) parameters.iterator() ==> java.util.List.iterator()
  Line 1543) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1544) i.next() ==> java.util.Iterator.next()
  Line 1545) p.accept(this, arg) ==> com.github.javaparser.ast.body.Parameter.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1546) i.hasNext() ==> java.util.Iterator.hasNext()
  Line 1547) printer.print(", ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1552) printer.print(")") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1555) printer.print(" -> ") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1556) n.getBody() ==> com.github.javaparser.ast.expr.LambdaExpr.getBody()
  Line 1559) ((ExpressionStmt) body).getExpression().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1559) ((ExpressionStmt) body).getExpression() ==> com.github.javaparser.ast.stmt.ExpressionStmt.getExpression()
  Line 1561) body.accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1568) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1568) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1569) n.getScope() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getScope()
  Line 1570) n.getIdentifier() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getIdentifier()
  Line 1572) n.getScope().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1572) n.getScope() ==> com.github.javaparser.ast.expr.MethodReferenceExpr.getScope()
  Line 1575) printer.print("::") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1576) printTypeArgs(n, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printTypeArgs(com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments<?>, java.lang.Object)
  Line 1578) printer.print(identifier) ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1585) printJavaComment(n.getComment(), arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printJavaComment(com.github.javaparser.ast.comments.Comment, java.lang.Object)
  Line 1585) n.getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 1586) n.getType() ==> com.github.javaparser.ast.expr.TypeExpr.getType()
  Line 1587) n.getType().accept(this, arg) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1587) n.getType() ==> com.github.javaparser.ast.expr.TypeExpr.getType()
  Line 1593) printAnnotations(arrayBracketPair.getAnnotations(), true, arg) ==> com.github.javaparser.ast.visitor.DumpVisitor.printAnnotations(java.util.List<com.github.javaparser.ast.expr.AnnotationExpr>, boolean, java.lang.Object)
  Line 1593) arrayBracketPair.getAnnotations() ==> com.github.javaparser.ast.ArrayBracketPair.getAnnotations()
  Line 1594) printer.print("[]") ==> com.github.javaparser.ast.visitor.DumpVisitor.SourcePrinter.print(java.lang.String)
  Line 1600) node.getParentNode() ==> com.github.javaparser.ast.Node.getParentNode()
  Line 1603) everything.addAll(parent.getChildrenNodes()) ==> java.util.List.addAll(java.util.Collection<? extends E>)
  Line 1603) parent.getChildrenNodes() ==> com.github.javaparser.ast.Node.getChildrenNodes()
  Line 1604) sortByBeginPosition(everything) ==> com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.List<T>)
  Line 1606) everything.size() ==> java.util.List.size()
  Line 1607) everything.get(i) ==> java.util.List.get(int)
  Line 1612) everything.get(i) ==> java.util.List.get(int)
  Line 1615) everything.get(i) ==> java.util.List.get(int)
  Line 1617) nodeToPrint.getClass() ==> java.lang.Object.getClass()
  Line 1618) nodeToPrint.accept(this, null) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1625) everything.addAll(node.getChildrenNodes()) ==> java.util.List.addAll(java.util.Collection<? extends E>)
  Line 1625) node.getChildrenNodes() ==> com.github.javaparser.ast.Node.getChildrenNodes()
  Line 1626) sortByBeginPosition(everything) ==> com.github.javaparser.utils.PositionUtils.sortByBeginPosition(java.util.List<T>)
  Line 1627) everything.isEmpty() ==> java.util.List.isEmpty()
  Line 1633) everything.size() ==> java.util.List.size()
  Line 1634) everything.get(everything.size() - 1 - commentsAtEnd) ==> java.util.List.get(int)
  Line 1634) everything.size() ==> java.util.List.size()
  Line 1641) everything.get(everything.size() - commentsAtEnd + i).accept(this, null) ==> com.github.javaparser.ast.Node.accept(com.github.javaparser.ast.visitor.VoidVisitor<A>, A)
  Line 1641) everything.get(everything.size() - commentsAtEnd + i) ==> java.util.List.get(int)
  Line 1641) everything.size() ==> java.util.List.size()
