  Line 58) EnumSet.noneOf(Modifier.class) ==> java.util.EnumSet.noneOf(java.lang.Class<E>)
  Line 70) setModifiers(modifiers) ==> com.github.javaparser.ast.body.FieldDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 71) setElementType(elementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setElementType(com.github.javaparser.ast.type.Type)
  Line 73) aux.add(variable) ==> java.util.List.add(E)
  Line 74) setVariables(aux) ==> com.github.javaparser.ast.body.FieldDeclaration.setVariables(java.util.List<com.github.javaparser.ast.body.VariableDeclarator>)
  Line 78) setModifiers(modifiers) ==> com.github.javaparser.ast.body.FieldDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 79) setElementType(elementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setElementType(com.github.javaparser.ast.type.Type)
  Line 80) setVariables(variables) ==> com.github.javaparser.ast.body.FieldDeclaration.setVariables(java.util.List<com.github.javaparser.ast.body.VariableDeclarator>)
  Line 86) setModifiers(modifiers) ==> com.github.javaparser.ast.body.FieldDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 87) setElementType(elementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setElementType(com.github.javaparser.ast.type.Type)
  Line 88) setVariables(variables) ==> com.github.javaparser.ast.body.FieldDeclaration.setVariables(java.util.List<com.github.javaparser.ast.body.VariableDeclarator>)
  Line 89) setArrayBracketPairsAfterElementType(arrayBracketPairsAfterElementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setArrayBracketPairsAfterElementType(java.util.List<com.github.javaparser.ast.ArrayBracketPair>)
  Line 95) setModifiers(modifiers) ==> com.github.javaparser.ast.body.FieldDeclaration.setModifiers(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
  Line 96) setElementType(elementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setElementType(com.github.javaparser.ast.type.Type)
  Line 97) setVariables(variables) ==> com.github.javaparser.ast.body.FieldDeclaration.setVariables(java.util.List<com.github.javaparser.ast.body.VariableDeclarator>)
  Line 98) setArrayBracketPairsAfterElementType(arrayBracketPairsAfterElementType) ==> com.github.javaparser.ast.body.FieldDeclaration.setArrayBracketPairsAfterElementType(java.util.List<com.github.javaparser.ast.ArrayBracketPair>)
  Line 115) variables.add(variable) ==> java.util.List.add(E)
  Line 133) create(modifiers, type, variable) ==> com.github.javaparser.ast.body.FieldDeclaration.create(java.util.EnumSet<com.github.javaparser.ast.Modifier>, com.github.javaparser.ast.type.Type, com.github.javaparser.ast.body.VariableDeclarator)
  Line 138) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.body.FieldDeclaration, A)
  Line 143) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.body.FieldDeclaration, A)
  Line 159) ensureNotNull(variables) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 172) setAsParentNodeOf(this.variables) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
  Line 178) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 179) getComment() ==> com.github.javaparser.ast.Node.getComment()
  Line 193) getVariables().size() ==> java.util.List.size()
  Line 193) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 195) getParentNodeOfType(ClassOrInterfaceDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 196) getParentNodeOfType(EnumDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 197) parentClass.isInterface() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
  Line 201) getVariables().get(0) ==> java.util.List.get(int)
  Line 201) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 202) variable.getId().getName() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getName()
  Line 202) variable.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 203) fieldName.toUpperCase().substring(0, 1) ==> java.lang.String.substring(int, int)
  Line 203) fieldName.toUpperCase() ==> java.lang.String.toUpperCase()
  Line 203) fieldName.substring(1, fieldName.length()) ==> java.lang.String.substring(int, int)
  Line 203) fieldName.length() ==> java.lang.String.length()
  Line 206) parentClass.addMethod("get" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 208) parentEnum.addMethod("get" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 209) getter.setType(variable.getType()) ==> com.github.javaparser.ast.body.MethodDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 209) variable.getType() ==> com.github.javaparser.ast.body.VariableDeclarator.getType()
  Line 211) getter.setBody(blockStmt) ==> com.github.javaparser.ast.body.MethodDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)
  Line 212) blockStmt.addStatement(new ReturnStmt(name(fieldName))) ==> com.github.javaparser.ast.nodeTypes.NodeWithStatements.addStatement(com.github.javaparser.ast.stmt.Statement)
  Line 212) name(fieldName) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 225) getVariables().size() ==> java.util.List.size()
  Line 225) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 227) getParentNodeOfType(ClassOrInterfaceDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 228) getParentNodeOfType(EnumDeclaration.class) ==> com.github.javaparser.ast.Node.getParentNodeOfType(java.lang.Class<T>)
  Line 229) parentClass.isInterface() ==> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.isInterface()
  Line 233) getVariables().get(0) ==> java.util.List.get(int)
  Line 233) getVariables() ==> com.github.javaparser.ast.body.FieldDeclaration.getVariables()
  Line 234) variable.getId().getName() ==> com.github.javaparser.ast.body.VariableDeclaratorId.getName()
  Line 234) variable.getId() ==> com.github.javaparser.ast.body.VariableDeclarator.getId()
  Line 235) fieldName.toUpperCase().substring(0, 1) ==> java.lang.String.substring(int, int)
  Line 235) fieldName.toUpperCase() ==> java.lang.String.toUpperCase()
  Line 235) fieldName.substring(1, fieldName.length()) ==> java.lang.String.substring(int, int)
  Line 235) fieldName.length() ==> java.lang.String.length()
  Line 239) parentClass.addMethod("set" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 241) parentEnum.addMethod("set" + fieldNameUpper, PUBLIC) ==> com.github.javaparser.ast.nodeTypes.NodeWithMembers.addMethod(java.lang.String, com.github.javaparser.ast.Modifier...)
  Line 242) setter.setType(VOID_TYPE) ==> com.github.javaparser.ast.body.MethodDeclaration.setType(com.github.javaparser.ast.type.Type)
  Line 243) setter.getParameters().add(new Parameter(variable.getType(), new VariableDeclaratorId(fieldName))) ==> java.util.List.add(E)
  Line 243) setter.getParameters() ==> com.github.javaparser.ast.body.MethodDeclaration.getParameters()
  Line 243) variable.getType() ==> com.github.javaparser.ast.body.VariableDeclarator.getType()
  Line 245) setter.setBody(blockStmt2) ==> com.github.javaparser.ast.body.MethodDeclaration.setBody(com.github.javaparser.ast.stmt.BlockStmt)
  Line 246) blockStmt2.addStatement(new AssignExpr(new NameExpr("this." + fieldName), new NameExpr(fieldName), Operator.assign)) ==> com.github.javaparser.ast.nodeTypes.NodeWithStatements.addStatement(com.github.javaparser.ast.expr.Expression)
  Line 259) setAsParentNodeOf(this.elementType) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 267) ensureNotNull(arrayBracketPairsAfterElementType) ==> com.github.javaparser.utils.Utils.ensureNotNull(java.util.List<T>)
  Line 274) setAsParentNodeOf(arrayBracketPairsAfterType) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
