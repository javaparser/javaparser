  Line 53) setName(name) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setName(java.lang.String)
  Line 57) setScope(scope) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setScope(com.github.javaparser.ast.type.ClassOrInterfaceType)
  Line 58) setName(name) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setName(java.lang.String)
  Line 63) setScope(scope) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setScope(com.github.javaparser.ast.type.ClassOrInterfaceType)
  Line 64) setName(name) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setName(java.lang.String)
  Line 65) setTypeArguments(typeArguments) ==> com.github.javaparser.ast.type.ClassOrInterfaceType.setTypeArguments(java.util.List<com.github.javaparser.ast.type.Type<?>>)
  Line 69) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.GenericVisitor.visit(com.github.javaparser.ast.type.ClassOrInterfaceType, A)
  Line 73) v.visit(this, arg) ==> com.github.javaparser.ast.visitor.VoidVisitor.visit(com.github.javaparser.ast.type.ClassOrInterfaceType, A)
  Line 86) PrimitiveType.unboxMap.containsKey(name) ==> java.util.HashMap.containsKey(java.lang.Object)
  Line 90) isBoxedType() ==> com.github.javaparser.ast.type.ClassOrInterfaceType.isBoxedType()
  Line 93) PrimitiveType.unboxMap.get(name) ==> java.util.HashMap.get(java.lang.Object)
  Line 104) setAsParentNodeOf(this.scope) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(com.github.javaparser.ast.Node)
  Line 116) setAsParentNodeOf(this.typeArguments) ==> com.github.javaparser.ast.Node.setAsParentNodeOf(java.util.List<? extends com.github.javaparser.ast.Node>)
