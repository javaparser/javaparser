  Line 22) getThrows().add(throwType) ==> java.util.List.add(E)
  Line 22) getThrows() ==> com.github.javaparser.ast.nodeTypes.NodeWithThrowable.getThrows()
  Line 23) throwType.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 34) ((Node) this).tryAddImportToParentCompilationUnit(clazz) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 35) addThrows(new ClassOrInterfaceType(clazz.getSimpleName())) ==> com.github.javaparser.ast.nodeTypes.NodeWithThrowable.addThrows(com.github.javaparser.ast.type.ReferenceType)
  Line 35) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 45) isThrows(clazz.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithThrowable.isThrows(java.lang.String)
  Line 45) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 55) getThrows().stream().anyMatch(t -> t.toString().equals(throwableName)) ==> java.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)
  Line 55) getThrows().stream() ==> java.util.Collection.stream()
  Line 55) getThrows() ==> com.github.javaparser.ast.nodeTypes.NodeWithThrowable.getThrows()
  Line 55) t.toString().equals(throwableName) ==> java.lang.String.equals(java.lang.Object)
  Line 55) t.toString() ==> com.github.javaparser.ast.Node.toString()
