  Line 55) name(name) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 56) getAnnotations().add(normalAnnotationExpr) ==> java.util.List.add(E)
  Line 56) getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 57) normalAnnotationExpr.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 68) ((Node) this).tryAddImportToParentCompilationUnit(clazz) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 69) addAnnotation(clazz.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.addAnnotation(java.lang.String)
  Line 69) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 81) name(name) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 82) getAnnotations().add(markerAnnotationExpr) ==> java.util.List.add(E)
  Line 82) getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 83) markerAnnotationExpr.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 94) ((Node) this).tryAddImportToParentCompilationUnit(clazz) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 95) addMarkerAnnotation(clazz.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.addMarkerAnnotation(java.lang.String)
  Line 95) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 108) name(name) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 108) name(value) ==> com.github.javaparser.ast.expr.NameExpr.name(java.lang.String)
  Line 109) getAnnotations().add(singleMemberAnnotationExpr) ==> java.util.List.add(E)
  Line 109) getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 110) singleMemberAnnotationExpr.setParentNode((Node) this) ==> com.github.javaparser.ast.Node.setParentNode(com.github.javaparser.ast.Node)
  Line 123) ((Node) this).tryAddImportToParentCompilationUnit(clazz) ==> com.github.javaparser.ast.Node.tryAddImportToParentCompilationUnit(java.lang.Class<?>)
  Line 124) addSingleMemberAnnotation(clazz.getSimpleName(), value) ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.addSingleMemberAnnotation(java.lang.String, java.lang.String)
  Line 124) clazz.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 134) getAnnotations().stream().anyMatch(a -> a.getName().getName().equals(annotationName)) ==> java.util.stream.Stream.anyMatch(java.util.function.Predicate<? super T>)
  Line 134) getAnnotations().stream() ==> java.util.Collection.stream()
  Line 134) getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 134) a.getName().getName().equals(annotationName) ==> java.lang.String.equals(java.lang.Object)
  Line 134) a.getName().getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 134) a.getName() ==> com.github.javaparser.ast.expr.AnnotationExpr.getName()
  Line 144) isAnnotationPresent(annotationClass.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.isAnnotationPresent(java.lang.String)
  Line 144) annotationClass.getSimpleName() ==> java.lang.Class.getSimpleName()
  Line 154) getAnnotations().stream().filter(a -> a.getName().getName().equals(annotationName)).findFirst().orElse(null) ==> java.util.Optional.orElse(T)
  Line 154) getAnnotations().stream().filter(a -> a.getName().getName().equals(annotationName)).findFirst() ==> java.util.stream.Stream.findFirst()
  Line 154) getAnnotations().stream().filter(a -> a.getName().getName().equals(annotationName)) ==> java.util.stream.Stream.filter(java.util.function.Predicate<? super T>)
  Line 154) getAnnotations().stream() ==> java.util.Collection.stream()
  Line 154) getAnnotations() ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotations()
  Line 154) a.getName().getName().equals(annotationName) ==> java.lang.String.equals(java.lang.Object)
  Line 154) a.getName().getName() ==> com.github.javaparser.ast.expr.NameExpr.getName()
  Line 154) a.getName() ==> com.github.javaparser.ast.expr.AnnotationExpr.getName()
  Line 165) getAnnotationByName(annotationClass.getSimpleName()) ==> com.github.javaparser.ast.nodeTypes.NodeWithAnnotations.getAnnotationByName(java.lang.String)
  Line 165) annotationClass.getSimpleName() ==> java.lang.Class.getSimpleName()
