  Line 13) o1.getName().compareTo(o2.getName()) ==> java.lang.String.compareTo(java.lang.String)
  Line 13) o1.getName() ==> java.lang.reflect.Method.getName()
  Line 13) o2.getName() ==> java.lang.reflect.Method.getName()
  Line 15) o1.getParameterCount() ==> java.lang.reflect.Method.getParameterCount()
  Line 15) o2.getParameterCount() ==> java.lang.reflect.Method.getParameterCount()
  Line 17) o1.getParameterCount() ==> java.lang.reflect.Method.getParameterCount()
  Line 18) new ParameterComparator().compare(o1.getParameters()[i], o2.getParameters()[i]) ==> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator.compare(java.lang.reflect.Parameter, java.lang.reflect.Parameter)
  Line 18) o1.getParameters() ==> java.lang.reflect.Executable.getParameters()
  Line 18) o2.getParameters() ==> java.lang.reflect.Executable.getParameters()
  Line 21) new ClassComparator().compare(o1.getReturnType(), o2.getReturnType()) ==> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.compare(java.lang.Class<?>, java.lang.Class<?>)
  Line 21) o1.getReturnType() ==> java.lang.reflect.Method.getReturnType()
  Line 21) o2.getReturnType() ==> java.lang.reflect.Method.getReturnType()
