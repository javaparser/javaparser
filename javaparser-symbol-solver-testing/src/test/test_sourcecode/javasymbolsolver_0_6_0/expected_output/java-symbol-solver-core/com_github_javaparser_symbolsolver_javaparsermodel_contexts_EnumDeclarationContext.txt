  Line 41) getDeclaration() ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext.getDeclaration()
  Line 49) wrappedNode.getEntries() ==> com.github.javaparser.ast.body.EnumDeclaration.getEntries()
  Line 50) constant.getName().getId().equals(name) ==> java.lang.String.equals(java.lang.Object)
  Line 50) constant.getName().getId() ==> com.github.javaparser.ast.nodeTypes.NodeWithIdentifier.getId()
  Line 50) constant.getName() ==> com.github.javaparser.ast.body.EnumConstantDeclaration.getName()
  Line 51) SymbolReference.solved(new JavaParserEnumConstantDeclaration(constant, typeSolver)) ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.solved(S2)
  Line 55) this.getDeclaration().hasField(name) ==> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasField(java.lang.String)
  Line 55) this.getDeclaration() ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext.getDeclaration()
  Line 56) SymbolReference.solved(this.getDeclaration().getField(name)) ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.solved(S2)
  Line 56) this.getDeclaration().getField(name) ==> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getField(java.lang.String)
  Line 56) this.getDeclaration() ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.EnumDeclarationContext.getDeclaration()
  Line 60) getParent().solveSymbol(name, typeSolver) ==> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
  Line 60) getParent() ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext.getParent()
  Line 65) javaParserTypeDeclarationAdapter.solveType(name, typeSolver) ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
  Line 70) javaParserTypeDeclarationAdapter.solveMethod(name, argumentsTypes, staticOnly, typeSolver) ==> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
