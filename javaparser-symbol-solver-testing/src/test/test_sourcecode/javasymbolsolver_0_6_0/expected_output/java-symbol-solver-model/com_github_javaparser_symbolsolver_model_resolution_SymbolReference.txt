  Line 41) Optional.of(symbolDeclaration) ==> java.util.Optional.of(T)
  Line 48) Optional.<S>empty() ==> java.util.Optional.empty()
  Line 60) isSolved() ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.isSolved()
  Line 63) correspondingDeclaration.get() ==> java.util.Optional.get()
  Line 70) correspondingDeclaration.isPresent() ==> java.util.Optional.isPresent()
  Line 74) ref.isSolved() ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.isSolved()
  Line 75) SymbolReference.solved(ref.getCorrespondingDeclaration()) ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.solved(S2)
  Line 75) ref.getCorrespondingDeclaration() ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.getCorrespondingDeclaration()
  Line 77) SymbolReference.unsolved(clazz) ==> com.github.javaparser.symbolsolver.model.resolution.SymbolReference.unsolved(java.lang.Class<S2>)
