  Line 31) declaringType().getPackageName() ==> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
  Line 31) declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
  Line 38) declaringType().getClassName() ==> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
  Line 38) declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
  Line 46) declaringType().getQualifiedName() ==> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
  Line 46) declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
  Line 46) this.getName() ==> com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
  Line 54) sb.append(getName()) ==> java.lang.StringBuffer.append(java.lang.String)
  Line 54) getName() ==> com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
  Line 55) sb.append("(") ==> java.lang.StringBuffer.append(java.lang.String)
  Line 56) getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 58) sb.append(", ") ==> java.lang.StringBuffer.append(java.lang.String)
  Line 60) sb.append(getParam(i).describeType()) ==> java.lang.StringBuffer.append(java.lang.String)
  Line 60) getParam(i).describeType() ==> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.describeType()
  Line 60) getParam(i) ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
  Line 62) sb.append(")") ==> java.lang.StringBuffer.append(java.lang.String)
  Line 63) sb.toString() ==> java.lang.StringBuffer.toString()
  Line 71) declaringType().getId() ==> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId()
  Line 71) declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
  Line 71) this.getSignature() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature()
  Line 95) getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 98) getParam(getNumberOfParams() - 1) ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
  Line 98) getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 106) getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 109) getParam(getNumberOfParams() - 1).isVariadic() ==> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic()
  Line 109) getParam(getNumberOfParams() - 1) ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
  Line 109) getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 115) this.getTypeParameters() ==> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
  Line 116) tp.getName().equals(name) ==> java.lang.String.equals(java.lang.Object)
  Line 116) tp.getName() ==> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
  Line 117) Optional.of(tp) ==> java.util.Optional.of(T)
  Line 120) declaringType().findTypeParameter(name) ==> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.findTypeParameter(java.lang.String)
  Line 120) declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
