  Line 41) TypeParametersMap.empty() ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.empty()
  Line 43) declaration.getNumberOfParams() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
  Line 44) paramTypes.add(declaration.getParam(i).getType()) ==> java.util.List.add(E)
  Line 44) declaration.getParam(i).getType() ==> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration.getType()
  Line 44) declaration.getParam(i) ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
  Line 46) declaration.getReturnType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration.getReturnType()
  Line 50) TypeParametersMap.empty() ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.empty()
  Line 73) declaration.getName() ==> com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
  Line 77) declaration.declaringType() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType()
  Line 89) paramTypes.get(i) ==> java.util.List.get(int)
  Line 93) newParams.set(i, replaced) ==> java.util.List.set(int, E)
  Line 109) paramTypes.size() ==> java.util.List.size()
  Line 116) paramTypes.get(i) ==> java.util.List.get(int)
  Line 125) typeParametersMap.toBuilder().setValue(typeParameter, type).build() ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.Builder.build()
  Line 125) typeParametersMap.toBuilder().setValue(typeParameter, type) ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.Builder.setValue(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 125) typeParametersMap.toBuilder() ==> com.github.javaparser.symbolsolver.model.typesystem.parametrization.TypeParametersMap.toBuilder()
  Line 128) paramTypes.size() ==> java.util.List.size()
  Line 129) paramTypes.get(i) ==> java.util.List.get(int)
  Line 130) originalParamType.replaceTypeVariables(typeParameter, type, inferredTypes) ==> com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>)
  Line 131) res.replaceParamType(i, newParamType) ==> com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceParamType(int, com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 134) oldReturnType.replaceTypeVariables(typeParameter, type, inferredTypes) ==> com.github.javaparser.symbolsolver.model.typesystem.Type.replaceTypeVariables(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type, java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>)
  Line 135) res.replaceReturnType(newReturnType) ==> com.github.javaparser.symbolsolver.model.methods.MethodUsage.replaceReturnType(com.github.javaparser.symbolsolver.model.typesystem.Type)
  Line 146) this.getDeclaration().getQualifiedSignature() ==> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature()
  Line 146) this.getDeclaration() ==> com.github.javaparser.symbolsolver.model.methods.MethodUsage.getDeclaration()
