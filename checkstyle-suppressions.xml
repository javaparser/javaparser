<?xml version="1.0"?>

<!DOCTYPE suppressions PUBLIC
		"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN"
		"https://checkstyle.org/dtds/suppressions_1_2.dtd">

<!-- EXAMPLE: https://github.com/checkstyle/checkstyle/blob/master/config/suppressions.xml -->
<suppressions>
	<!-- TODO: Remove these suppressions and/or make them more specific to particular files. -->
	<suppress checks="DesignForExtension"/>
	<suppress checks="EmptyBlock"/>
	<suppress checks="FinalParameters"/>
	<suppress checks="FinalClass"/>
	<suppress checks="HiddenField"/>
	<suppress checks="JavadocMethod"/>
	<suppress checks="JavadocPackage"/>
	<suppress checks="JavadocStyle"/>
	<suppress checks="JavadocType"/>
	<suppress checks="JavadocVariable"/>
	<suppress checks="LineLength"/>
	<suppress checks="MagicNumber"/>
	<suppress checks="MissingJavadocMethod"/>
	<suppress checks="NeedBraces"/>
	<suppress checks="OperatorWrap"/>
	<suppress checks="ParameterNumber"/>
	<suppress checks="RedundantModifier"/>
	<suppress checks="TodoComment"/>
	<suppress checks="VisibilityModifier"/>


	<!-- These methods are generated -->
	<suppress checks="AvoidNestedBlocks" files="GenericListVisitorAdapter.java"/>
	<suppress checks="AvoidNestedBlocks" files="GenericVisitorAdapter.java"/>

	<!-- The metamodel is generated -->
	<suppress checks="ConstantName" files="JavaParserMetaModel.java"/>
	<suppress checks="MethodLength" files="JavaParserMetaModel.java"/>

	<!--  -->
	<suppress checks="EmptyBlock" files="LexicalDifferenceCalculator.java"/>
	<suppress checks="EmptyBlock" files="ResolvedReferenceType.java"/>

	<!-- Some validators legitimately use nested blocks to group together similar validations -->
	<suppress checks="AvoidNestedBlocks" files="Java.*Validator.java"/>
	<!-- Some validators use underscores within class names to represent e.g. `Java 1.2` as `Java1_2`  -->
	<suppress checks="TypeName" files="Java.*Validator.java"/>

	<!-- These files are generated, so we tolerate long files and methods -->
	<suppress checks="FileLength" files="DefaultPrettyPrinterVisitor.java"/>
	<suppress checks="FileLength" files="GenericListVisitorAdapter.java"/>
	<suppress checks="FileLength" files="GenericVisitorAdapter.java"/>
	<suppress checks="FileLength" files="JavaToken.java"/>
	<suppress checks="MethodLength" files="JavaToken.java"/>
	<suppress checks="MethodLength" files="LexicalDifferenceCalculator.java"/>
	<suppress checks="FileLength" files="PrettyPrintVisitor.java"/>
	<suppress checks="MethodLength" files="TokenTypes.java"/>

	<!-- The generator config has some options that are enabled/disabled using line comments, and the end semicolon on its own line -->
	<suppress checks="NoWhitespaceBefore" files="CoreGenerator.java"/>

	<!-- Algorithms defined within the JLS use uppercase variables, therefore are permitted here: -->
	<suppress checks="LocalVariableName" files="BoundSet.java"/>
	<suppress checks="MemberName" files="ExpressionCompatibleWithType.java"/>
	<suppress checks="LocalVariableName" files="ExpressionCompatibleWithType.java"/>
	<suppress checks="ParameterName" files="ExpressionCompatibleWithType.java"/>
	<suppress checks="MemberName" files="LambdaThrowsCompatibleWithType.java"/>
	<suppress checks="MemberName" files="MethodReferenceThrowsCompatibleWithType.java"/>
	<suppress checks="LocalVariableName" files="TypeCompatibleWithType.java"/>
	<suppress checks="MemberName" files="TypeContainedByType.java"/>
	<suppress checks="ParameterName" files="TypeContainedByType.java"/>
	<suppress checks="LocalVariableName" files="TypeSameAsType.java"/>
	<suppress checks="MemberName" files="TypeSameAsType.java"/>
	<suppress checks="ParameterName" files="TypeSameAsType.java"/>
	<suppress checks="MemberName" files="TypeSubtypeOfType.java"/>
	<suppress checks="ParameterName" files="TypeSubtypeOfType.java"/>
	<suppress checks="LocalVariableName" files="TypeHelper.java"/>
	<suppress checks="ParameterName" files="TypeHelper.java"/>
	<suppress checks="LocalVariableName" files="TypeInference.java"/>
	<suppress checks="ParameterName" files="TypeInference.java"/>

	<!--  -->
	<suppress checks="SimplifyBooleanExpression" files="BinaryExprContext.java"/>

	<!--  -->
	<suppress checks="MethodLength" files="BoundSet.java"/>
	<suppress checks="MethodLength" files="ExpressionCompatibleWithType.java"/>
	<suppress checks="MethodLength" files="JavaSymbolSolver.java"/>
	<suppress checks="MethodLength" files="NameLogic.java"/>
	<suppress checks="MethodLength" files="TypeExtractor.java"/>

	<!--  -->
	<suppress checks="RightCurly" files="BoundSet.java"/>
	<suppress checks="RightCurly" files="MethodResolutionLogic.java"/>
	<suppress checks="RightCurly" files="TypeExtractor.java"/>
	<suppress checks="RightCurly" files="TypeHelper.java"/>

	<!--  -->
	<suppress checks="MethodName" files="BoundSet.java"/>

	<!--  -->
	<suppress checks="EmptyForIteratorPad"/>
	<suppress checks="MethodName" files="CsmList.java"/>
	<suppress checks="MethodName" files="DefaultPrettyPrinterVisitor.java"/>
	<suppress checks="MethodName" files="Difference.java"/>
	<suppress checks="MethodName" files="LexicalDifferenceCalculator.java"/>
	<suppress checks="MethodName" files="PrettyPrinterVisitor.java"/>

</suppressions>
